1.1 output:
Print array
2, 3, 5, 7, 11,
Print array
4253616, 0, 59, 0, 14160736, 0, 1, 0, -1, -1,
Print array
3, 5, 7, 11, 14160736, 0, 1, 0, -1, -1,
1.2 เมื่อเรียกใช้ print จะรับ parameter 2 ตัว ตัวแรกคือ ตัวแปร array ตัวแปรที่สองรับขนาด ซึ่งฟังก์ชั่นนี้จะทำการ print คำว่า "Print array" แล้ว new line จากนั้นก็ print element ที่อยู่ใน data จนหมดแล้ว new line อีกรอบ
ซึ่งครั้งแรกจะ print array ของ arr1 มา 5 ตัว ครั้งที่ 2 print array มา 10 ตัว ซึ่งสมาชิกใน arr2 ยังไม่ถูกกำหนดค่า จึงได้ค่าขยะ
และคำสั่ง std::copy จากทำการcopy Array ซึ่ง argument ตัวแรก เป็นการรับค่า address ที่จะเริ่มcopy ตัวที่สอง รับค่า addressที่จะสิ้นส่ดการcopy ส่วนตัวที่สาม รับค่า array ที่่อยากให้ copy ไปใส่
1.3 copy ใช้ทำสำเนา array ตัวหนึงไปยังอีกตัวหนึ่ง
begin คือ ตำแหน่งแรกของ array ที่ถูกรับค่าใน argument
end คือตำแหน่งสุดท้ายของ array ที่ถูกรับค่าใน argument

2.1 *(arr2+4) = "Eggplant";
*(arr2+5) = arr1[0]+arr1[1];
2.2 delete[] arr2;

3.1 output:
1
2
3
3
3
3.2 ptr ชี้ไปยัง arr ตัวที่ 2 และ ค่าใน array = {1, 3, 3, 4, 5} เนื่องจากบรรทัดที่ 8 เป็นการ print array ตัวที่ 0 บรรทัดที่ 9 บวกaddress ที่ ptr ชี้ไป ไป 1 แล้ว print (arr ตัวที่1) บรรทัดที่ 10 เป็นการบวกค่าที่ptr ชี้ไป(arr ตัวที่ 1) arr ตัวที่ 1 จึงเป็น 3 บรรทัดที่ 10 เป็นการprint ค่าที่ ptr ชี้ตอนปัจจุบันก่อน(arr ตัวที่ 1 ทีมีค่า 3) แล้วจึงบวก address ที่ ptr ชี้ไป(arr ตัวที่ 2) บรรทัดที่ 11 เป็นการ print ค่าที่ ptr ชี้ปัจจุบัน(arr ตัวที่ 2 มีค่า 3)

4.1 setZero มีหน้าที่รับ parameter เป็นarray(pointer) และขนาดของ array แล้วทำให้ value ของทุกสมาชิกใน arrayดังกล่าว = 0
setVal เป็นการรับ parameter เป้น array(pointer) ขนาาด array และ ค่า val แล้วทำให้ค่าของ สมาชิกทุกตัวใน array ดังกล่าว มีค่า = val
4.2 void setZero(int* &a, int size) เป็นการ pass reference to pointer ก็คือเมื่อเราเปลี่ยนแปลง address  ของ a แล้ว address ของ parameter ตั้งที่ใส่เข้าไปก็เปลี่ยนแปลงไปด้วย
เช่น arr เริ่มต้นที่ address ที่ 2000 การทำงานของ setZero ก็คือ loop 5รอบ โดยที่แต่ละรอบจะset ค่า ที่ a ชี้ไป ให้เป้น 0 แล้วขยับ address ไปที่ละหนึ่งจนหลุด loop เมื่อหลุด loop แล้ว a จะชี้ไปที่ arr ตัวที่ size ซึ่งเมื่อจบการทำงานของฟังก์ชันsetZeroแล้ว  address ของarr จะกลายเป็นว่าเริ่มต้นที่ arr addressที่ 2004 แทน
4.3 ต่างกัน ตรงที่ บรรทัด 27 จะเป็นการสร้างตัวแปรใน stack และชี้ไปยัง address ที่จองใหม่ใน heap ส่วนบรรทัดที่ 28 เป็นการจองพื้นที่ และเก็บใน stack 