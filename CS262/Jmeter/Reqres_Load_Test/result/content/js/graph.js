/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 224.0, "minX": 0.0, "maxY": 27095.0, "series": [{"data": [[0.0, 241.0], [0.1, 241.0], [0.2, 241.0], [0.3, 241.0], [0.4, 241.0], [0.5, 241.0], [0.6, 241.0], [0.7, 241.0], [0.8, 241.0], [0.9, 241.0], [1.0, 241.0], [1.1, 241.0], [1.2, 241.0], [1.3, 241.0], [1.4, 241.0], [1.5, 241.0], [1.6, 241.0], [1.7, 241.0], [1.8, 241.0], [1.9, 241.0], [2.0, 241.0], [2.1, 241.0], [2.2, 241.0], [2.3, 241.0], [2.4, 241.0], [2.5, 241.0], [2.6, 241.0], [2.7, 241.0], [2.8, 241.0], [2.9, 241.0], [3.0, 241.0], [3.1, 241.0], [3.2, 241.0], [3.3, 241.0], [3.4, 241.0], [3.5, 241.0], [3.6, 241.0], [3.7, 241.0], [3.8, 241.0], [3.9, 241.0], [4.0, 241.0], [4.1, 241.0], [4.2, 241.0], [4.3, 241.0], [4.4, 241.0], [4.5, 241.0], [4.6, 241.0], [4.7, 241.0], [4.8, 241.0], [4.9, 241.0], [5.0, 243.0], [5.1, 243.0], [5.2, 243.0], [5.3, 243.0], [5.4, 243.0], [5.5, 243.0], [5.6, 243.0], [5.7, 243.0], [5.8, 243.0], [5.9, 243.0], [6.0, 243.0], [6.1, 243.0], [6.2, 243.0], [6.3, 243.0], [6.4, 243.0], [6.5, 243.0], [6.6, 243.0], [6.7, 243.0], [6.8, 243.0], [6.9, 243.0], [7.0, 243.0], [7.1, 243.0], [7.2, 243.0], [7.3, 243.0], [7.4, 243.0], [7.5, 243.0], [7.6, 243.0], [7.7, 243.0], [7.8, 243.0], [7.9, 243.0], [8.0, 243.0], [8.1, 243.0], [8.2, 243.0], [8.3, 243.0], [8.4, 243.0], [8.5, 243.0], [8.6, 243.0], [8.7, 243.0], [8.8, 243.0], [8.9, 243.0], [9.0, 243.0], [9.1, 243.0], [9.2, 243.0], [9.3, 243.0], [9.4, 243.0], [9.5, 243.0], [9.6, 243.0], [9.7, 243.0], [9.8, 243.0], [9.9, 243.0], [10.0, 243.0], [10.1, 243.0], [10.2, 243.0], [10.3, 243.0], [10.4, 243.0], [10.5, 243.0], [10.6, 243.0], [10.7, 243.0], [10.8, 243.0], [10.9, 243.0], [11.0, 243.0], [11.1, 243.0], [11.2, 243.0], [11.3, 243.0], [11.4, 243.0], [11.5, 243.0], [11.6, 243.0], [11.7, 243.0], [11.8, 243.0], [11.9, 243.0], [12.0, 243.0], [12.1, 243.0], [12.2, 243.0], [12.3, 243.0], [12.4, 243.0], [12.5, 243.0], [12.6, 243.0], [12.7, 243.0], [12.8, 243.0], [12.9, 243.0], [13.0, 243.0], [13.1, 243.0], [13.2, 243.0], [13.3, 243.0], [13.4, 243.0], [13.5, 243.0], [13.6, 243.0], [13.7, 243.0], [13.8, 243.0], [13.9, 243.0], [14.0, 243.0], [14.1, 243.0], [14.2, 243.0], [14.3, 243.0], [14.4, 243.0], [14.5, 243.0], [14.6, 243.0], [14.7, 243.0], [14.8, 243.0], [14.9, 243.0], [15.0, 244.0], [15.1, 244.0], [15.2, 244.0], [15.3, 244.0], [15.4, 244.0], [15.5, 244.0], [15.6, 244.0], [15.7, 244.0], [15.8, 244.0], [15.9, 244.0], [16.0, 244.0], [16.1, 244.0], [16.2, 244.0], [16.3, 244.0], [16.4, 244.0], [16.5, 244.0], [16.6, 244.0], [16.7, 244.0], [16.8, 244.0], [16.9, 244.0], [17.0, 244.0], [17.1, 244.0], [17.2, 244.0], [17.3, 244.0], [17.4, 244.0], [17.5, 244.0], [17.6, 244.0], [17.7, 244.0], [17.8, 244.0], [17.9, 244.0], [18.0, 244.0], [18.1, 244.0], [18.2, 244.0], [18.3, 244.0], [18.4, 244.0], [18.5, 244.0], [18.6, 244.0], [18.7, 244.0], [18.8, 244.0], [18.9, 244.0], [19.0, 244.0], [19.1, 244.0], [19.2, 244.0], [19.3, 244.0], [19.4, 244.0], [19.5, 244.0], [19.6, 244.0], [19.7, 244.0], [19.8, 244.0], [19.9, 244.0], [20.0, 244.0], [20.1, 244.0], [20.2, 244.0], [20.3, 244.0], [20.4, 244.0], [20.5, 244.0], [20.6, 244.0], [20.7, 244.0], [20.8, 244.0], [20.9, 244.0], [21.0, 244.0], [21.1, 244.0], [21.2, 244.0], [21.3, 244.0], [21.4, 244.0], [21.5, 244.0], [21.6, 244.0], [21.7, 244.0], [21.8, 244.0], [21.9, 244.0], [22.0, 244.0], [22.1, 244.0], [22.2, 244.0], [22.3, 244.0], [22.4, 244.0], [22.5, 244.0], [22.6, 244.0], [22.7, 244.0], [22.8, 244.0], [22.9, 244.0], [23.0, 244.0], [23.1, 244.0], [23.2, 244.0], [23.3, 244.0], [23.4, 244.0], [23.5, 244.0], [23.6, 244.0], [23.7, 244.0], [23.8, 244.0], [23.9, 244.0], [24.0, 244.0], [24.1, 244.0], [24.2, 244.0], [24.3, 244.0], [24.4, 244.0], [24.5, 244.0], [24.6, 244.0], [24.7, 244.0], [24.8, 244.0], [24.9, 244.0], [25.0, 246.0], [25.1, 246.0], [25.2, 246.0], [25.3, 246.0], [25.4, 246.0], [25.5, 246.0], [25.6, 246.0], [25.7, 246.0], [25.8, 246.0], [25.9, 246.0], [26.0, 246.0], [26.1, 246.0], [26.2, 246.0], [26.3, 246.0], [26.4, 246.0], [26.5, 246.0], [26.6, 246.0], [26.7, 246.0], [26.8, 246.0], [26.9, 246.0], [27.0, 246.0], [27.1, 246.0], [27.2, 246.0], [27.3, 246.0], [27.4, 246.0], [27.5, 246.0], [27.6, 246.0], [27.7, 246.0], [27.8, 246.0], [27.9, 246.0], [28.0, 246.0], [28.1, 246.0], [28.2, 246.0], [28.3, 246.0], [28.4, 246.0], [28.5, 246.0], [28.6, 246.0], [28.7, 246.0], [28.8, 246.0], [28.9, 246.0], [29.0, 246.0], [29.1, 246.0], [29.2, 246.0], [29.3, 246.0], [29.4, 246.0], [29.5, 246.0], [29.6, 246.0], [29.7, 246.0], [29.8, 246.0], [29.9, 246.0], [30.0, 246.0], [30.1, 246.0], [30.2, 246.0], [30.3, 246.0], [30.4, 246.0], [30.5, 246.0], [30.6, 246.0], [30.7, 246.0], [30.8, 246.0], [30.9, 246.0], [31.0, 246.0], [31.1, 246.0], [31.2, 246.0], [31.3, 246.0], [31.4, 246.0], [31.5, 246.0], [31.6, 246.0], [31.7, 246.0], [31.8, 246.0], [31.9, 246.0], [32.0, 246.0], [32.1, 246.0], [32.2, 246.0], [32.3, 246.0], [32.4, 246.0], [32.5, 246.0], [32.6, 246.0], [32.7, 246.0], [32.8, 246.0], [32.9, 246.0], [33.0, 246.0], [33.1, 246.0], [33.2, 246.0], [33.3, 246.0], [33.4, 246.0], [33.5, 246.0], [33.6, 246.0], [33.7, 246.0], [33.8, 246.0], [33.9, 246.0], [34.0, 246.0], [34.1, 246.0], [34.2, 246.0], [34.3, 246.0], [34.4, 246.0], [34.5, 246.0], [34.6, 246.0], [34.7, 246.0], [34.8, 246.0], [34.9, 246.0], [35.0, 248.0], [35.1, 248.0], [35.2, 248.0], [35.3, 248.0], [35.4, 248.0], [35.5, 248.0], [35.6, 248.0], [35.7, 248.0], [35.8, 248.0], [35.9, 248.0], [36.0, 248.0], [36.1, 248.0], [36.2, 248.0], [36.3, 248.0], [36.4, 248.0], [36.5, 248.0], [36.6, 248.0], [36.7, 248.0], [36.8, 248.0], [36.9, 248.0], [37.0, 248.0], [37.1, 248.0], [37.2, 248.0], [37.3, 248.0], [37.4, 248.0], [37.5, 248.0], [37.6, 248.0], [37.7, 248.0], [37.8, 248.0], [37.9, 248.0], [38.0, 248.0], [38.1, 248.0], [38.2, 248.0], [38.3, 248.0], [38.4, 248.0], [38.5, 248.0], [38.6, 248.0], [38.7, 248.0], [38.8, 248.0], [38.9, 248.0], [39.0, 248.0], [39.1, 248.0], [39.2, 248.0], [39.3, 248.0], [39.4, 248.0], [39.5, 248.0], [39.6, 248.0], [39.7, 248.0], [39.8, 248.0], [39.9, 248.0], [40.0, 248.0], [40.1, 248.0], [40.2, 248.0], [40.3, 248.0], [40.4, 248.0], [40.5, 248.0], [40.6, 248.0], [40.7, 248.0], [40.8, 248.0], [40.9, 248.0], [41.0, 248.0], [41.1, 248.0], [41.2, 248.0], [41.3, 248.0], [41.4, 248.0], [41.5, 248.0], [41.6, 248.0], [41.7, 248.0], [41.8, 248.0], [41.9, 248.0], [42.0, 248.0], [42.1, 248.0], [42.2, 248.0], [42.3, 248.0], [42.4, 248.0], [42.5, 248.0], [42.6, 248.0], [42.7, 248.0], [42.8, 248.0], [42.9, 248.0], [43.0, 248.0], [43.1, 248.0], [43.2, 248.0], [43.3, 248.0], [43.4, 248.0], [43.5, 248.0], [43.6, 248.0], [43.7, 248.0], [43.8, 248.0], [43.9, 248.0], [44.0, 248.0], [44.1, 248.0], [44.2, 248.0], [44.3, 248.0], [44.4, 248.0], [44.5, 248.0], [44.6, 248.0], [44.7, 248.0], [44.8, 248.0], [44.9, 248.0], [45.0, 257.0], [45.1, 257.0], [45.2, 257.0], [45.3, 257.0], [45.4, 257.0], [45.5, 257.0], [45.6, 257.0], [45.7, 257.0], [45.8, 257.0], [45.9, 257.0], [46.0, 257.0], [46.1, 257.0], [46.2, 257.0], [46.3, 257.0], [46.4, 257.0], [46.5, 257.0], [46.6, 257.0], [46.7, 257.0], [46.8, 257.0], [46.9, 257.0], [47.0, 257.0], [47.1, 257.0], [47.2, 257.0], [47.3, 257.0], [47.4, 257.0], [47.5, 257.0], [47.6, 257.0], [47.7, 257.0], [47.8, 257.0], [47.9, 257.0], [48.0, 257.0], [48.1, 257.0], [48.2, 257.0], [48.3, 257.0], [48.4, 257.0], [48.5, 257.0], [48.6, 257.0], [48.7, 257.0], [48.8, 257.0], [48.9, 257.0], [49.0, 257.0], [49.1, 257.0], [49.2, 257.0], [49.3, 257.0], [49.4, 257.0], [49.5, 257.0], [49.6, 257.0], [49.7, 257.0], [49.8, 257.0], [49.9, 257.0], [50.0, 258.0], [50.1, 258.0], [50.2, 258.0], [50.3, 258.0], [50.4, 258.0], [50.5, 258.0], [50.6, 258.0], [50.7, 258.0], [50.8, 258.0], [50.9, 258.0], [51.0, 258.0], [51.1, 258.0], [51.2, 258.0], [51.3, 258.0], [51.4, 258.0], [51.5, 258.0], [51.6, 258.0], [51.7, 258.0], [51.8, 258.0], [51.9, 258.0], [52.0, 258.0], [52.1, 258.0], [52.2, 258.0], [52.3, 258.0], [52.4, 258.0], [52.5, 258.0], [52.6, 258.0], [52.7, 258.0], [52.8, 258.0], [52.9, 258.0], [53.0, 258.0], [53.1, 258.0], [53.2, 258.0], [53.3, 258.0], [53.4, 258.0], [53.5, 258.0], [53.6, 258.0], [53.7, 258.0], [53.8, 258.0], [53.9, 258.0], [54.0, 258.0], [54.1, 258.0], [54.2, 258.0], [54.3, 258.0], [54.4, 258.0], [54.5, 258.0], [54.6, 258.0], [54.7, 258.0], [54.8, 258.0], [54.9, 258.0], [55.0, 260.0], [55.1, 260.0], [55.2, 260.0], [55.3, 260.0], [55.4, 260.0], [55.5, 260.0], [55.6, 260.0], [55.7, 260.0], [55.8, 260.0], [55.9, 260.0], [56.0, 260.0], [56.1, 260.0], [56.2, 260.0], [56.3, 260.0], [56.4, 260.0], [56.5, 260.0], [56.6, 260.0], [56.7, 260.0], [56.8, 260.0], [56.9, 260.0], [57.0, 260.0], [57.1, 260.0], [57.2, 260.0], [57.3, 260.0], [57.4, 260.0], [57.5, 260.0], [57.6, 260.0], [57.7, 260.0], [57.8, 260.0], [57.9, 260.0], [58.0, 260.0], [58.1, 260.0], [58.2, 260.0], [58.3, 260.0], [58.4, 260.0], [58.5, 260.0], [58.6, 260.0], [58.7, 260.0], [58.8, 260.0], [58.9, 260.0], [59.0, 260.0], [59.1, 260.0], [59.2, 260.0], [59.3, 260.0], [59.4, 260.0], [59.5, 260.0], [59.6, 260.0], [59.7, 260.0], [59.8, 260.0], [59.9, 260.0], [60.0, 274.0], [60.1, 274.0], [60.2, 274.0], [60.3, 274.0], [60.4, 274.0], [60.5, 274.0], [60.6, 274.0], [60.7, 274.0], [60.8, 274.0], [60.9, 274.0], [61.0, 274.0], [61.1, 274.0], [61.2, 274.0], [61.3, 274.0], [61.4, 274.0], [61.5, 274.0], [61.6, 274.0], [61.7, 274.0], [61.8, 274.0], [61.9, 274.0], [62.0, 274.0], [62.1, 274.0], [62.2, 274.0], [62.3, 274.0], [62.4, 274.0], [62.5, 274.0], [62.6, 274.0], [62.7, 274.0], [62.8, 274.0], [62.9, 274.0], [63.0, 274.0], [63.1, 274.0], [63.2, 274.0], [63.3, 274.0], [63.4, 274.0], [63.5, 274.0], [63.6, 274.0], [63.7, 274.0], [63.8, 274.0], [63.9, 274.0], [64.0, 274.0], [64.1, 274.0], [64.2, 274.0], [64.3, 274.0], [64.4, 274.0], [64.5, 274.0], [64.6, 274.0], [64.7, 274.0], [64.8, 274.0], [64.9, 274.0], [65.0, 300.0], [65.1, 300.0], [65.2, 300.0], [65.3, 300.0], [65.4, 300.0], [65.5, 300.0], [65.6, 300.0], [65.7, 300.0], [65.8, 300.0], [65.9, 300.0], [66.0, 300.0], [66.1, 300.0], [66.2, 300.0], [66.3, 300.0], [66.4, 300.0], [66.5, 300.0], [66.6, 300.0], [66.7, 300.0], [66.8, 300.0], [66.9, 300.0], [67.0, 300.0], [67.1, 300.0], [67.2, 300.0], [67.3, 300.0], [67.4, 300.0], [67.5, 300.0], [67.6, 300.0], [67.7, 300.0], [67.8, 300.0], [67.9, 300.0], [68.0, 300.0], [68.1, 300.0], [68.2, 300.0], [68.3, 300.0], [68.4, 300.0], [68.5, 300.0], [68.6, 300.0], [68.7, 300.0], [68.8, 300.0], [68.9, 300.0], [69.0, 300.0], [69.1, 300.0], [69.2, 300.0], [69.3, 300.0], [69.4, 300.0], [69.5, 300.0], [69.6, 300.0], [69.7, 300.0], [69.8, 300.0], [69.9, 300.0], [70.0, 301.0], [70.1, 301.0], [70.2, 301.0], [70.3, 301.0], [70.4, 301.0], [70.5, 301.0], [70.6, 301.0], [70.7, 301.0], [70.8, 301.0], [70.9, 301.0], [71.0, 301.0], [71.1, 301.0], [71.2, 301.0], [71.3, 301.0], [71.4, 301.0], [71.5, 301.0], [71.6, 301.0], [71.7, 301.0], [71.8, 301.0], [71.9, 301.0], [72.0, 301.0], [72.1, 301.0], [72.2, 301.0], [72.3, 301.0], [72.4, 301.0], [72.5, 301.0], [72.6, 301.0], [72.7, 301.0], [72.8, 301.0], [72.9, 301.0], [73.0, 301.0], [73.1, 301.0], [73.2, 301.0], [73.3, 301.0], [73.4, 301.0], [73.5, 301.0], [73.6, 301.0], [73.7, 301.0], [73.8, 301.0], [73.9, 301.0], [74.0, 301.0], [74.1, 301.0], [74.2, 301.0], [74.3, 301.0], [74.4, 301.0], [74.5, 301.0], [74.6, 301.0], [74.7, 301.0], [74.8, 301.0], [74.9, 301.0], [75.0, 302.0], [75.1, 302.0], [75.2, 302.0], [75.3, 302.0], [75.4, 302.0], [75.5, 302.0], [75.6, 302.0], [75.7, 302.0], [75.8, 302.0], [75.9, 302.0], [76.0, 302.0], [76.1, 302.0], [76.2, 302.0], [76.3, 302.0], [76.4, 302.0], [76.5, 302.0], [76.6, 302.0], [76.7, 302.0], [76.8, 302.0], [76.9, 302.0], [77.0, 302.0], [77.1, 302.0], [77.2, 302.0], [77.3, 302.0], [77.4, 302.0], [77.5, 302.0], [77.6, 302.0], [77.7, 302.0], [77.8, 302.0], [77.9, 302.0], [78.0, 302.0], [78.1, 302.0], [78.2, 302.0], [78.3, 302.0], [78.4, 302.0], [78.5, 302.0], [78.6, 302.0], [78.7, 302.0], [78.8, 302.0], [78.9, 302.0], [79.0, 302.0], [79.1, 302.0], [79.2, 302.0], [79.3, 302.0], [79.4, 302.0], [79.5, 302.0], [79.6, 302.0], [79.7, 302.0], [79.8, 302.0], [79.9, 302.0], [80.0, 303.0], [80.1, 303.0], [80.2, 303.0], [80.3, 303.0], [80.4, 303.0], [80.5, 303.0], [80.6, 303.0], [80.7, 303.0], [80.8, 303.0], [80.9, 303.0], [81.0, 303.0], [81.1, 303.0], [81.2, 303.0], [81.3, 303.0], [81.4, 303.0], [81.5, 303.0], [81.6, 303.0], [81.7, 303.0], [81.8, 303.0], [81.9, 303.0], [82.0, 303.0], [82.1, 303.0], [82.2, 303.0], [82.3, 303.0], [82.4, 303.0], [82.5, 303.0], [82.6, 303.0], [82.7, 303.0], [82.8, 303.0], [82.9, 303.0], [83.0, 303.0], [83.1, 303.0], [83.2, 303.0], [83.3, 303.0], [83.4, 303.0], [83.5, 303.0], [83.6, 303.0], [83.7, 303.0], [83.8, 303.0], [83.9, 303.0], [84.0, 303.0], [84.1, 303.0], [84.2, 303.0], [84.3, 303.0], [84.4, 303.0], [84.5, 303.0], [84.6, 303.0], [84.7, 303.0], [84.8, 303.0], [84.9, 303.0], [85.0, 303.0], [85.1, 303.0], [85.2, 303.0], [85.3, 303.0], [85.4, 303.0], [85.5, 303.0], [85.6, 303.0], [85.7, 303.0], [85.8, 303.0], [85.9, 303.0], [86.0, 303.0], [86.1, 303.0], [86.2, 303.0], [86.3, 303.0], [86.4, 303.0], [86.5, 303.0], [86.6, 303.0], [86.7, 303.0], [86.8, 303.0], [86.9, 303.0], [87.0, 303.0], [87.1, 303.0], [87.2, 303.0], [87.3, 303.0], [87.4, 303.0], [87.5, 303.0], [87.6, 303.0], [87.7, 303.0], [87.8, 303.0], [87.9, 303.0], [88.0, 303.0], [88.1, 303.0], [88.2, 303.0], [88.3, 303.0], [88.4, 303.0], [88.5, 303.0], [88.6, 303.0], [88.7, 303.0], [88.8, 303.0], [88.9, 303.0], [89.0, 303.0], [89.1, 303.0], [89.2, 303.0], [89.3, 303.0], [89.4, 303.0], [89.5, 303.0], [89.6, 303.0], [89.7, 303.0], [89.8, 303.0], [89.9, 303.0], [90.0, 304.0], [90.1, 304.0], [90.2, 304.0], [90.3, 304.0], [90.4, 304.0], [90.5, 304.0], [90.6, 304.0], [90.7, 304.0], [90.8, 304.0], [90.9, 304.0], [91.0, 304.0], [91.1, 304.0], [91.2, 304.0], [91.3, 304.0], [91.4, 304.0], [91.5, 304.0], [91.6, 304.0], [91.7, 304.0], [91.8, 304.0], [91.9, 304.0], [92.0, 304.0], [92.1, 304.0], [92.2, 304.0], [92.3, 304.0], [92.4, 304.0], [92.5, 304.0], [92.6, 304.0], [92.7, 304.0], [92.8, 304.0], [92.9, 304.0], [93.0, 304.0], [93.1, 304.0], [93.2, 304.0], [93.3, 304.0], [93.4, 304.0], [93.5, 304.0], [93.6, 304.0], [93.7, 304.0], [93.8, 304.0], [93.9, 304.0], [94.0, 304.0], [94.1, 304.0], [94.2, 304.0], [94.3, 304.0], [94.4, 304.0], [94.5, 304.0], [94.6, 304.0], [94.7, 304.0], [94.8, 304.0], [94.9, 304.0], [95.0, 319.0], [95.1, 319.0], [95.2, 319.0], [95.3, 319.0], [95.4, 319.0], [95.5, 319.0], [95.6, 319.0], [95.7, 319.0], [95.8, 319.0], [95.9, 319.0], [96.0, 319.0], [96.1, 319.0], [96.2, 319.0], [96.3, 319.0], [96.4, 319.0], [96.5, 319.0], [96.6, 319.0], [96.7, 319.0], [96.8, 319.0], [96.9, 319.0], [97.0, 319.0], [97.1, 319.0], [97.2, 319.0], [97.3, 319.0], [97.4, 319.0], [97.5, 319.0], [97.6, 319.0], [97.7, 319.0], [97.8, 319.0], [97.9, 319.0], [98.0, 319.0], [98.1, 319.0], [98.2, 319.0], [98.3, 319.0], [98.4, 319.0], [98.5, 319.0], [98.6, 319.0], [98.7, 319.0], [98.8, 319.0], [98.9, 319.0], [99.0, 319.0], [99.1, 319.0], [99.2, 319.0], [99.3, 319.0], [99.4, 319.0], [99.5, 319.0], [99.6, 319.0], [99.7, 319.0], [99.8, 319.0], [99.9, 319.0]], "isOverall": false, "label": "20 Users Load Test", "isController": false}, {"data": [[0.0, 542.0], [0.1, 542.0], [0.2, 542.0], [0.3, 542.0], [0.4, 542.0], [0.5, 542.0], [0.6, 542.0], [0.7, 542.0], [0.8, 542.0], [0.9, 542.0], [1.0, 542.0], [1.1, 542.0], [1.2, 542.0], [1.3, 542.0], [1.4, 542.0], [1.5, 542.0], [1.6, 542.0], [1.7, 542.0], [1.8, 542.0], [1.9, 542.0], [2.0, 542.0], [2.1, 542.0], [2.2, 542.0], [2.3, 542.0], [2.4, 542.0], [2.5, 542.0], [2.6, 542.0], [2.7, 542.0], [2.8, 542.0], [2.9, 542.0], [3.0, 542.0], [3.1, 542.0], [3.2, 542.0], [3.3, 542.0], [3.4, 542.0], [3.5, 542.0], [3.6, 542.0], [3.7, 542.0], [3.8, 542.0], [3.9, 542.0], [4.0, 542.0], [4.1, 542.0], [4.2, 542.0], [4.3, 542.0], [4.4, 542.0], [4.5, 542.0], [4.6, 542.0], [4.7, 542.0], [4.8, 542.0], [4.9, 542.0], [5.0, 542.0], [5.1, 542.0], [5.2, 542.0], [5.3, 542.0], [5.4, 542.0], [5.5, 542.0], [5.6, 542.0], [5.7, 542.0], [5.8, 542.0], [5.9, 542.0], [6.0, 542.0], [6.1, 542.0], [6.2, 542.0], [6.3, 542.0], [6.4, 542.0], [6.5, 542.0], [6.6, 542.0], [6.7, 542.0], [6.8, 542.0], [6.9, 542.0], [7.0, 542.0], [7.1, 542.0], [7.2, 542.0], [7.3, 542.0], [7.4, 542.0], [7.5, 542.0], [7.6, 542.0], [7.7, 542.0], [7.8, 542.0], [7.9, 542.0], [8.0, 542.0], [8.1, 542.0], [8.2, 542.0], [8.3, 542.0], [8.4, 542.0], [8.5, 542.0], [8.6, 542.0], [8.7, 542.0], [8.8, 542.0], [8.9, 542.0], [9.0, 542.0], [9.1, 542.0], [9.2, 542.0], [9.3, 542.0], [9.4, 542.0], [9.5, 542.0], [9.6, 542.0], [9.7, 542.0], [9.8, 542.0], [9.9, 542.0], [10.0, 542.0], [10.1, 542.0], [10.2, 542.0], [10.3, 542.0], [10.4, 542.0], [10.5, 542.0], [10.6, 542.0], [10.7, 542.0], [10.8, 542.0], [10.9, 542.0], [11.0, 542.0], [11.1, 542.0], [11.2, 542.0], [11.3, 542.0], [11.4, 542.0], [11.5, 542.0], [11.6, 542.0], [11.7, 542.0], [11.8, 542.0], [11.9, 542.0], [12.0, 542.0], [12.1, 542.0], [12.2, 542.0], [12.3, 542.0], [12.4, 542.0], [12.5, 542.0], [12.6, 542.0], [12.7, 542.0], [12.8, 542.0], [12.9, 542.0], [13.0, 542.0], [13.1, 542.0], [13.2, 542.0], [13.3, 542.0], [13.4, 542.0], [13.5, 542.0], [13.6, 542.0], [13.7, 542.0], [13.8, 542.0], [13.9, 542.0], [14.0, 542.0], [14.1, 542.0], [14.2, 542.0], [14.3, 542.0], [14.4, 542.0], [14.5, 542.0], [14.6, 542.0], [14.7, 542.0], [14.8, 542.0], [14.9, 542.0], [15.0, 542.0], [15.1, 542.0], [15.2, 542.0], [15.3, 542.0], [15.4, 542.0], [15.5, 542.0], [15.6, 542.0], [15.7, 542.0], [15.8, 542.0], [15.9, 542.0], [16.0, 542.0], [16.1, 542.0], [16.2, 542.0], [16.3, 542.0], [16.4, 542.0], [16.5, 542.0], [16.6, 542.0], [16.7, 542.0], [16.8, 542.0], [16.9, 542.0], [17.0, 542.0], [17.1, 542.0], [17.2, 542.0], [17.3, 542.0], [17.4, 542.0], [17.5, 542.0], [17.6, 542.0], [17.7, 542.0], [17.8, 542.0], [17.9, 542.0], [18.0, 542.0], [18.1, 542.0], [18.2, 542.0], [18.3, 542.0], [18.4, 542.0], [18.5, 542.0], [18.6, 542.0], [18.7, 542.0], [18.8, 542.0], [18.9, 542.0], [19.0, 542.0], [19.1, 542.0], [19.2, 542.0], [19.3, 542.0], [19.4, 542.0], [19.5, 542.0], [19.6, 542.0], [19.7, 542.0], [19.8, 542.0], [19.9, 542.0], [20.0, 542.0], [20.1, 542.0], [20.2, 542.0], [20.3, 542.0], [20.4, 542.0], [20.5, 542.0], [20.6, 542.0], [20.7, 542.0], [20.8, 542.0], [20.9, 542.0], [21.0, 542.0], [21.1, 542.0], [21.2, 542.0], [21.3, 542.0], [21.4, 542.0], [21.5, 542.0], [21.6, 542.0], [21.7, 542.0], [21.8, 542.0], [21.9, 542.0], [22.0, 542.0], [22.1, 542.0], [22.2, 542.0], [22.3, 542.0], [22.4, 542.0], [22.5, 542.0], [22.6, 542.0], [22.7, 542.0], [22.8, 542.0], [22.9, 542.0], [23.0, 542.0], [23.1, 542.0], [23.2, 542.0], [23.3, 542.0], [23.4, 542.0], [23.5, 542.0], [23.6, 542.0], [23.7, 542.0], [23.8, 542.0], [23.9, 542.0], [24.0, 542.0], [24.1, 542.0], [24.2, 542.0], [24.3, 542.0], [24.4, 542.0], [24.5, 542.0], [24.6, 542.0], [24.7, 542.0], [24.8, 542.0], [24.9, 542.0], [25.0, 542.0], [25.1, 542.0], [25.2, 542.0], [25.3, 542.0], [25.4, 542.0], [25.5, 542.0], [25.6, 542.0], [25.7, 542.0], [25.8, 542.0], [25.9, 542.0], [26.0, 542.0], [26.1, 542.0], [26.2, 542.0], [26.3, 542.0], [26.4, 542.0], [26.5, 542.0], [26.6, 542.0], [26.7, 542.0], [26.8, 542.0], [26.9, 542.0], [27.0, 542.0], [27.1, 542.0], [27.2, 542.0], [27.3, 542.0], [27.4, 542.0], [27.5, 542.0], [27.6, 542.0], [27.7, 542.0], [27.8, 542.0], [27.9, 542.0], [28.0, 542.0], [28.1, 542.0], [28.2, 542.0], [28.3, 542.0], [28.4, 542.0], [28.5, 542.0], [28.6, 542.0], [28.7, 542.0], [28.8, 542.0], [28.9, 542.0], [29.0, 542.0], [29.1, 542.0], [29.2, 542.0], [29.3, 542.0], [29.4, 542.0], [29.5, 542.0], [29.6, 542.0], [29.7, 542.0], [29.8, 542.0], [29.9, 542.0], [30.0, 542.0], [30.1, 542.0], [30.2, 542.0], [30.3, 542.0], [30.4, 542.0], [30.5, 542.0], [30.6, 542.0], [30.7, 542.0], [30.8, 542.0], [30.9, 542.0], [31.0, 542.0], [31.1, 542.0], [31.2, 542.0], [31.3, 542.0], [31.4, 542.0], [31.5, 542.0], [31.6, 542.0], [31.7, 542.0], [31.8, 542.0], [31.9, 542.0], [32.0, 542.0], [32.1, 542.0], [32.2, 542.0], [32.3, 542.0], [32.4, 542.0], [32.5, 542.0], [32.6, 542.0], [32.7, 542.0], [32.8, 542.0], [32.9, 542.0], [33.0, 542.0], [33.1, 542.0], [33.2, 542.0], [33.3, 542.0], [33.4, 542.0], [33.5, 542.0], [33.6, 542.0], [33.7, 542.0], [33.8, 542.0], [33.9, 542.0], [34.0, 542.0], [34.1, 542.0], [34.2, 542.0], [34.3, 542.0], [34.4, 542.0], [34.5, 542.0], [34.6, 542.0], [34.7, 542.0], [34.8, 542.0], [34.9, 542.0], [35.0, 542.0], [35.1, 542.0], [35.2, 542.0], [35.3, 542.0], [35.4, 542.0], [35.5, 542.0], [35.6, 542.0], [35.7, 542.0], [35.8, 542.0], [35.9, 542.0], [36.0, 542.0], [36.1, 542.0], [36.2, 542.0], [36.3, 542.0], [36.4, 542.0], [36.5, 542.0], [36.6, 542.0], [36.7, 542.0], [36.8, 542.0], [36.9, 542.0], [37.0, 542.0], [37.1, 542.0], [37.2, 542.0], [37.3, 542.0], [37.4, 542.0], [37.5, 542.0], [37.6, 542.0], [37.7, 542.0], [37.8, 542.0], [37.9, 542.0], [38.0, 542.0], [38.1, 542.0], [38.2, 542.0], [38.3, 542.0], [38.4, 542.0], [38.5, 542.0], [38.6, 542.0], [38.7, 542.0], [38.8, 542.0], [38.9, 542.0], [39.0, 542.0], [39.1, 542.0], [39.2, 542.0], [39.3, 542.0], [39.4, 542.0], [39.5, 542.0], [39.6, 542.0], [39.7, 542.0], [39.8, 542.0], [39.9, 542.0], [40.0, 542.0], [40.1, 542.0], [40.2, 542.0], [40.3, 542.0], [40.4, 542.0], [40.5, 542.0], [40.6, 542.0], [40.7, 542.0], [40.8, 542.0], [40.9, 542.0], [41.0, 542.0], [41.1, 542.0], [41.2, 542.0], [41.3, 542.0], [41.4, 542.0], [41.5, 542.0], [41.6, 542.0], [41.7, 542.0], [41.8, 542.0], [41.9, 542.0], [42.0, 542.0], [42.1, 542.0], [42.2, 542.0], [42.3, 542.0], [42.4, 542.0], [42.5, 542.0], [42.6, 542.0], [42.7, 542.0], [42.8, 542.0], [42.9, 542.0], [43.0, 542.0], [43.1, 542.0], [43.2, 542.0], [43.3, 542.0], [43.4, 542.0], [43.5, 542.0], [43.6, 542.0], [43.7, 542.0], [43.8, 542.0], [43.9, 542.0], [44.0, 542.0], [44.1, 542.0], [44.2, 542.0], [44.3, 542.0], [44.4, 542.0], [44.5, 542.0], [44.6, 542.0], [44.7, 542.0], [44.8, 542.0], [44.9, 542.0], [45.0, 542.0], [45.1, 542.0], [45.2, 542.0], [45.3, 542.0], [45.4, 542.0], [45.5, 542.0], [45.6, 542.0], [45.7, 542.0], [45.8, 542.0], [45.9, 542.0], [46.0, 542.0], [46.1, 542.0], [46.2, 542.0], [46.3, 542.0], [46.4, 542.0], [46.5, 542.0], [46.6, 542.0], [46.7, 542.0], [46.8, 542.0], [46.9, 542.0], [47.0, 542.0], [47.1, 542.0], [47.2, 542.0], [47.3, 542.0], [47.4, 542.0], [47.5, 542.0], [47.6, 542.0], [47.7, 542.0], [47.8, 542.0], [47.9, 542.0], [48.0, 542.0], [48.1, 542.0], [48.2, 542.0], [48.3, 542.0], [48.4, 542.0], [48.5, 542.0], [48.6, 542.0], [48.7, 542.0], [48.8, 542.0], [48.9, 542.0], [49.0, 542.0], [49.1, 542.0], [49.2, 542.0], [49.3, 542.0], [49.4, 542.0], [49.5, 542.0], [49.6, 542.0], [49.7, 542.0], [49.8, 542.0], [49.9, 542.0], [50.0, 542.0], [50.1, 542.0], [50.2, 542.0], [50.3, 542.0], [50.4, 542.0], [50.5, 542.0], [50.6, 542.0], [50.7, 542.0], [50.8, 542.0], [50.9, 542.0], [51.0, 542.0], [51.1, 542.0], [51.2, 542.0], [51.3, 542.0], [51.4, 542.0], [51.5, 542.0], [51.6, 542.0], [51.7, 542.0], [51.8, 542.0], [51.9, 542.0], [52.0, 542.0], [52.1, 542.0], [52.2, 542.0], [52.3, 542.0], [52.4, 542.0], [52.5, 542.0], [52.6, 542.0], [52.7, 542.0], [52.8, 542.0], [52.9, 542.0], [53.0, 542.0], [53.1, 542.0], [53.2, 542.0], [53.3, 542.0], [53.4, 542.0], [53.5, 542.0], [53.6, 542.0], [53.7, 542.0], [53.8, 542.0], [53.9, 542.0], [54.0, 542.0], [54.1, 542.0], [54.2, 542.0], [54.3, 542.0], [54.4, 542.0], [54.5, 542.0], [54.6, 542.0], [54.7, 542.0], [54.8, 542.0], [54.9, 542.0], [55.0, 542.0], [55.1, 542.0], [55.2, 542.0], [55.3, 542.0], [55.4, 542.0], [55.5, 542.0], [55.6, 542.0], [55.7, 542.0], [55.8, 542.0], [55.9, 542.0], [56.0, 542.0], [56.1, 542.0], [56.2, 542.0], [56.3, 542.0], [56.4, 542.0], [56.5, 542.0], [56.6, 542.0], [56.7, 542.0], [56.8, 542.0], [56.9, 542.0], [57.0, 542.0], [57.1, 542.0], [57.2, 542.0], [57.3, 542.0], [57.4, 542.0], [57.5, 542.0], [57.6, 542.0], [57.7, 542.0], [57.8, 542.0], [57.9, 542.0], [58.0, 542.0], [58.1, 542.0], [58.2, 542.0], [58.3, 542.0], [58.4, 542.0], [58.5, 542.0], [58.6, 542.0], [58.7, 542.0], [58.8, 542.0], [58.9, 542.0], [59.0, 542.0], [59.1, 542.0], [59.2, 542.0], [59.3, 542.0], [59.4, 542.0], [59.5, 542.0], [59.6, 542.0], [59.7, 542.0], [59.8, 542.0], [59.9, 542.0], [60.0, 542.0], [60.1, 542.0], [60.2, 542.0], [60.3, 542.0], [60.4, 542.0], [60.5, 542.0], [60.6, 542.0], [60.7, 542.0], [60.8, 542.0], [60.9, 542.0], [61.0, 542.0], [61.1, 542.0], [61.2, 542.0], [61.3, 542.0], [61.4, 542.0], [61.5, 542.0], [61.6, 542.0], [61.7, 542.0], [61.8, 542.0], [61.9, 542.0], [62.0, 542.0], [62.1, 542.0], [62.2, 542.0], [62.3, 542.0], [62.4, 542.0], [62.5, 542.0], [62.6, 542.0], [62.7, 542.0], [62.8, 542.0], [62.9, 542.0], [63.0, 542.0], [63.1, 542.0], [63.2, 542.0], [63.3, 542.0], [63.4, 542.0], [63.5, 542.0], [63.6, 542.0], [63.7, 542.0], [63.8, 542.0], [63.9, 542.0], [64.0, 542.0], [64.1, 542.0], [64.2, 542.0], [64.3, 542.0], [64.4, 542.0], [64.5, 542.0], [64.6, 542.0], [64.7, 542.0], [64.8, 542.0], [64.9, 542.0], [65.0, 542.0], [65.1, 542.0], [65.2, 542.0], [65.3, 542.0], [65.4, 542.0], [65.5, 542.0], [65.6, 542.0], [65.7, 542.0], [65.8, 542.0], [65.9, 542.0], [66.0, 542.0], [66.1, 542.0], [66.2, 542.0], [66.3, 542.0], [66.4, 542.0], [66.5, 542.0], [66.6, 542.0], [66.7, 542.0], [66.8, 542.0], [66.9, 542.0], [67.0, 542.0], [67.1, 542.0], [67.2, 542.0], [67.3, 542.0], [67.4, 542.0], [67.5, 542.0], [67.6, 542.0], [67.7, 542.0], [67.8, 542.0], [67.9, 542.0], [68.0, 542.0], [68.1, 542.0], [68.2, 542.0], [68.3, 542.0], [68.4, 542.0], [68.5, 542.0], [68.6, 542.0], [68.7, 542.0], [68.8, 542.0], [68.9, 542.0], [69.0, 542.0], [69.1, 542.0], [69.2, 542.0], [69.3, 542.0], [69.4, 542.0], [69.5, 542.0], [69.6, 542.0], [69.7, 542.0], [69.8, 542.0], [69.9, 542.0], [70.0, 542.0], [70.1, 542.0], [70.2, 542.0], [70.3, 542.0], [70.4, 542.0], [70.5, 542.0], [70.6, 542.0], [70.7, 542.0], [70.8, 542.0], [70.9, 542.0], [71.0, 542.0], [71.1, 542.0], [71.2, 542.0], [71.3, 542.0], [71.4, 542.0], [71.5, 542.0], [71.6, 542.0], [71.7, 542.0], [71.8, 542.0], [71.9, 542.0], [72.0, 542.0], [72.1, 542.0], [72.2, 542.0], [72.3, 542.0], [72.4, 542.0], [72.5, 542.0], [72.6, 542.0], [72.7, 542.0], [72.8, 542.0], [72.9, 542.0], [73.0, 542.0], [73.1, 542.0], [73.2, 542.0], [73.3, 542.0], [73.4, 542.0], [73.5, 542.0], [73.6, 542.0], [73.7, 542.0], [73.8, 542.0], [73.9, 542.0], [74.0, 542.0], [74.1, 542.0], [74.2, 542.0], [74.3, 542.0], [74.4, 542.0], [74.5, 542.0], [74.6, 542.0], [74.7, 542.0], [74.8, 542.0], [74.9, 542.0], [75.0, 542.0], [75.1, 542.0], [75.2, 542.0], [75.3, 542.0], [75.4, 542.0], [75.5, 542.0], [75.6, 542.0], [75.7, 542.0], [75.8, 542.0], [75.9, 542.0], [76.0, 542.0], [76.1, 542.0], [76.2, 542.0], [76.3, 542.0], [76.4, 542.0], [76.5, 542.0], [76.6, 542.0], [76.7, 542.0], [76.8, 542.0], [76.9, 542.0], [77.0, 542.0], [77.1, 542.0], [77.2, 542.0], [77.3, 542.0], [77.4, 542.0], [77.5, 542.0], [77.6, 542.0], [77.7, 542.0], [77.8, 542.0], [77.9, 542.0], [78.0, 542.0], [78.1, 542.0], [78.2, 542.0], [78.3, 542.0], [78.4, 542.0], [78.5, 542.0], [78.6, 542.0], [78.7, 542.0], [78.8, 542.0], [78.9, 542.0], [79.0, 542.0], [79.1, 542.0], [79.2, 542.0], [79.3, 542.0], [79.4, 542.0], [79.5, 542.0], [79.6, 542.0], [79.7, 542.0], [79.8, 542.0], [79.9, 542.0], [80.0, 553.0], [80.1, 553.0], [80.2, 553.0], [80.3, 553.0], [80.4, 553.0], [80.5, 553.0], [80.6, 553.0], [80.7, 553.0], [80.8, 553.0], [80.9, 553.0], [81.0, 553.0], [81.1, 553.0], [81.2, 553.0], [81.3, 553.0], [81.4, 553.0], [81.5, 553.0], [81.6, 553.0], [81.7, 553.0], [81.8, 553.0], [81.9, 553.0], [82.0, 553.0], [82.1, 553.0], [82.2, 553.0], [82.3, 553.0], [82.4, 553.0], [82.5, 553.0], [82.6, 553.0], [82.7, 553.0], [82.8, 553.0], [82.9, 553.0], [83.0, 553.0], [83.1, 553.0], [83.2, 553.0], [83.3, 553.0], [83.4, 553.0], [83.5, 553.0], [83.6, 553.0], [83.7, 553.0], [83.8, 553.0], [83.9, 553.0], [84.0, 553.0], [84.1, 553.0], [84.2, 553.0], [84.3, 553.0], [84.4, 553.0], [84.5, 553.0], [84.6, 553.0], [84.7, 553.0], [84.8, 553.0], [84.9, 553.0], [85.0, 553.0], [85.1, 553.0], [85.2, 553.0], [85.3, 553.0], [85.4, 553.0], [85.5, 553.0], [85.6, 553.0], [85.7, 553.0], [85.8, 553.0], [85.9, 553.0], [86.0, 553.0], [86.1, 553.0], [86.2, 553.0], [86.3, 553.0], [86.4, 553.0], [86.5, 553.0], [86.6, 553.0], [86.7, 553.0], [86.8, 553.0], [86.9, 553.0], [87.0, 553.0], [87.1, 553.0], [87.2, 553.0], [87.3, 553.0], [87.4, 553.0], [87.5, 553.0], [87.6, 553.0], [87.7, 553.0], [87.8, 553.0], [87.9, 553.0], [88.0, 553.0], [88.1, 553.0], [88.2, 553.0], [88.3, 553.0], [88.4, 553.0], [88.5, 553.0], [88.6, 553.0], [88.7, 553.0], [88.8, 553.0], [88.9, 553.0], [89.0, 553.0], [89.1, 553.0], [89.2, 553.0], [89.3, 553.0], [89.4, 553.0], [89.5, 553.0], [89.6, 553.0], [89.7, 553.0], [89.8, 553.0], [89.9, 553.0], [90.0, 555.0], [90.1, 555.0], [90.2, 555.0], [90.3, 555.0], [90.4, 555.0], [90.5, 555.0], [90.6, 555.0], [90.7, 555.0], [90.8, 555.0], [90.9, 555.0], [91.0, 555.0], [91.1, 555.0], [91.2, 555.0], [91.3, 555.0], [91.4, 555.0], [91.5, 555.0], [91.6, 555.0], [91.7, 555.0], [91.8, 555.0], [91.9, 555.0], [92.0, 555.0], [92.1, 555.0], [92.2, 555.0], [92.3, 555.0], [92.4, 555.0], [92.5, 555.0], [92.6, 555.0], [92.7, 555.0], [92.8, 555.0], [92.9, 555.0], [93.0, 555.0], [93.1, 555.0], [93.2, 555.0], [93.3, 555.0], [93.4, 555.0], [93.5, 555.0], [93.6, 555.0], [93.7, 555.0], [93.8, 555.0], [93.9, 555.0], [94.0, 555.0], [94.1, 555.0], [94.2, 555.0], [94.3, 555.0], [94.4, 555.0], [94.5, 555.0], [94.6, 555.0], [94.7, 555.0], [94.8, 555.0], [94.9, 555.0], [95.0, 555.0], [95.1, 555.0], [95.2, 555.0], [95.3, 555.0], [95.4, 555.0], [95.5, 555.0], [95.6, 555.0], [95.7, 555.0], [95.8, 555.0], [95.9, 555.0], [96.0, 555.0], [96.1, 555.0], [96.2, 555.0], [96.3, 555.0], [96.4, 555.0], [96.5, 555.0], [96.6, 555.0], [96.7, 555.0], [96.8, 555.0], [96.9, 555.0], [97.0, 555.0], [97.1, 555.0], [97.2, 555.0], [97.3, 555.0], [97.4, 555.0], [97.5, 555.0], [97.6, 555.0], [97.7, 555.0], [97.8, 555.0], [97.9, 555.0], [98.0, 555.0], [98.1, 555.0], [98.2, 555.0], [98.3, 555.0], [98.4, 555.0], [98.5, 555.0], [98.6, 555.0], [98.7, 555.0], [98.8, 555.0], [98.9, 555.0], [99.0, 555.0], [99.1, 555.0], [99.2, 555.0], [99.3, 555.0], [99.4, 555.0], [99.5, 555.0], [99.6, 555.0], [99.7, 555.0], [99.8, 555.0], [99.9, 555.0]], "isOverall": false, "label": "10 Users Load Test", "isController": false}, {"data": [[0.0, 224.0], [0.1, 224.0], [0.2, 224.0], [0.3, 224.0], [0.4, 224.0], [0.5, 224.0], [0.6, 224.0], [0.7, 224.0], [0.8, 224.0], [0.9, 224.0], [1.0, 225.0], [1.1, 225.0], [1.2, 225.0], [1.3, 225.0], [1.4, 225.0], [1.5, 225.0], [1.6, 225.0], [1.7, 225.0], [1.8, 225.0], [1.9, 225.0], [2.0, 225.0], [2.1, 225.0], [2.2, 225.0], [2.3, 225.0], [2.4, 225.0], [2.5, 225.0], [2.6, 225.0], [2.7, 225.0], [2.8, 225.0], [2.9, 225.0], [3.0, 226.0], [3.1, 226.0], [3.2, 226.0], [3.3, 226.0], [3.4, 226.0], [3.5, 226.0], [3.6, 226.0], [3.7, 226.0], [3.8, 226.0], [3.9, 226.0], [4.0, 226.0], [4.1, 226.0], [4.2, 226.0], [4.3, 226.0], [4.4, 226.0], [4.5, 226.0], [4.6, 226.0], [4.7, 226.0], [4.8, 226.0], [4.9, 226.0], [5.0, 226.0], [5.1, 226.0], [5.2, 226.0], [5.3, 226.0], [5.4, 226.0], [5.5, 226.0], [5.6, 226.0], [5.7, 226.0], [5.8, 226.0], [5.9, 226.0], [6.0, 226.0], [6.1, 226.0], [6.2, 226.0], [6.3, 226.0], [6.4, 226.0], [6.5, 226.0], [6.6, 226.0], [6.7, 226.0], [6.8, 226.0], [6.9, 226.0], [7.0, 229.0], [7.1, 229.0], [7.2, 229.0], [7.3, 229.0], [7.4, 229.0], [7.5, 229.0], [7.6, 229.0], [7.7, 229.0], [7.8, 229.0], [7.9, 229.0], [8.0, 232.0], [8.1, 232.0], [8.2, 232.0], [8.3, 232.0], [8.4, 232.0], [8.5, 232.0], [8.6, 232.0], [8.7, 232.0], [8.8, 232.0], [8.9, 232.0], [9.0, 233.0], [9.1, 233.0], [9.2, 233.0], [9.3, 233.0], [9.4, 233.0], [9.5, 233.0], [9.6, 233.0], [9.7, 233.0], [9.8, 233.0], [9.9, 233.0], [10.0, 233.0], [10.1, 233.0], [10.2, 233.0], [10.3, 233.0], [10.4, 233.0], [10.5, 233.0], [10.6, 233.0], [10.7, 233.0], [10.8, 233.0], [10.9, 233.0], [11.0, 233.0], [11.1, 233.0], [11.2, 233.0], [11.3, 233.0], [11.4, 233.0], [11.5, 233.0], [11.6, 233.0], [11.7, 233.0], [11.8, 233.0], [11.9, 233.0], [12.0, 234.0], [12.1, 234.0], [12.2, 234.0], [12.3, 234.0], [12.4, 234.0], [12.5, 234.0], [12.6, 234.0], [12.7, 234.0], [12.8, 234.0], [12.9, 234.0], [13.0, 234.0], [13.1, 234.0], [13.2, 234.0], [13.3, 234.0], [13.4, 234.0], [13.5, 234.0], [13.6, 234.0], [13.7, 234.0], [13.8, 234.0], [13.9, 234.0], [14.0, 237.0], [14.1, 237.0], [14.2, 237.0], [14.3, 237.0], [14.4, 237.0], [14.5, 237.0], [14.6, 237.0], [14.7, 237.0], [14.8, 237.0], [14.9, 237.0], [15.0, 237.0], [15.1, 237.0], [15.2, 237.0], [15.3, 237.0], [15.4, 237.0], [15.5, 237.0], [15.6, 237.0], [15.7, 237.0], [15.8, 237.0], [15.9, 237.0], [16.0, 237.0], [16.1, 237.0], [16.2, 237.0], [16.3, 237.0], [16.4, 237.0], [16.5, 237.0], [16.6, 237.0], [16.7, 237.0], [16.8, 237.0], [16.9, 237.0], [17.0, 237.0], [17.1, 237.0], [17.2, 237.0], [17.3, 237.0], [17.4, 237.0], [17.5, 237.0], [17.6, 237.0], [17.7, 237.0], [17.8, 237.0], [17.9, 237.0], [18.0, 237.0], [18.1, 237.0], [18.2, 237.0], [18.3, 237.0], [18.4, 237.0], [18.5, 237.0], [18.6, 237.0], [18.7, 237.0], [18.8, 237.0], [18.9, 237.0], [19.0, 239.0], [19.1, 239.0], [19.2, 239.0], [19.3, 239.0], [19.4, 239.0], [19.5, 239.0], [19.6, 239.0], [19.7, 239.0], [19.8, 239.0], [19.9, 239.0], [20.0, 239.0], [20.1, 239.0], [20.2, 239.0], [20.3, 239.0], [20.4, 239.0], [20.5, 239.0], [20.6, 239.0], [20.7, 239.0], [20.8, 239.0], [20.9, 239.0], [21.0, 240.0], [21.1, 240.0], [21.2, 240.0], [21.3, 240.0], [21.4, 240.0], [21.5, 240.0], [21.6, 240.0], [21.7, 240.0], [21.8, 240.0], [21.9, 240.0], [22.0, 240.0], [22.1, 240.0], [22.2, 240.0], [22.3, 240.0], [22.4, 240.0], [22.5, 240.0], [22.6, 240.0], [22.7, 240.0], [22.8, 240.0], [22.9, 240.0], [23.0, 240.0], [23.1, 240.0], [23.2, 240.0], [23.3, 240.0], [23.4, 240.0], [23.5, 240.0], [23.6, 240.0], [23.7, 240.0], [23.8, 240.0], [23.9, 240.0], [24.0, 241.0], [24.1, 241.0], [24.2, 241.0], [24.3, 241.0], [24.4, 241.0], [24.5, 241.0], [24.6, 241.0], [24.7, 241.0], [24.8, 241.0], [24.9, 241.0], [25.0, 241.0], [25.1, 241.0], [25.2, 241.0], [25.3, 241.0], [25.4, 241.0], [25.5, 241.0], [25.6, 241.0], [25.7, 241.0], [25.8, 241.0], [25.9, 241.0], [26.0, 241.0], [26.1, 241.0], [26.2, 241.0], [26.3, 241.0], [26.4, 241.0], [26.5, 241.0], [26.6, 241.0], [26.7, 241.0], [26.8, 241.0], [26.9, 241.0], [27.0, 241.0], [27.1, 241.0], [27.2, 241.0], [27.3, 241.0], [27.4, 241.0], [27.5, 241.0], [27.6, 241.0], [27.7, 241.0], [27.8, 241.0], [27.9, 241.0], [28.0, 241.0], [28.1, 241.0], [28.2, 241.0], [28.3, 241.0], [28.4, 241.0], [28.5, 241.0], [28.6, 241.0], [28.7, 241.0], [28.8, 241.0], [28.9, 241.0], [29.0, 241.0], [29.1, 241.0], [29.2, 241.0], [29.3, 241.0], [29.4, 241.0], [29.5, 241.0], [29.6, 241.0], [29.7, 241.0], [29.8, 241.0], [29.9, 241.0], [30.0, 242.0], [30.1, 242.0], [30.2, 242.0], [30.3, 242.0], [30.4, 242.0], [30.5, 242.0], [30.6, 242.0], [30.7, 242.0], [30.8, 242.0], [30.9, 242.0], [31.0, 242.0], [31.1, 242.0], [31.2, 242.0], [31.3, 242.0], [31.4, 242.0], [31.5, 242.0], [31.6, 242.0], [31.7, 242.0], [31.8, 242.0], [31.9, 242.0], [32.0, 242.0], [32.1, 242.0], [32.2, 242.0], [32.3, 242.0], [32.4, 242.0], [32.5, 242.0], [32.6, 242.0], [32.7, 242.0], [32.8, 242.0], [32.9, 242.0], [33.0, 243.0], [33.1, 243.0], [33.2, 243.0], [33.3, 243.0], [33.4, 243.0], [33.5, 243.0], [33.6, 243.0], [33.7, 243.0], [33.8, 243.0], [33.9, 243.0], [34.0, 243.0], [34.1, 243.0], [34.2, 243.0], [34.3, 243.0], [34.4, 243.0], [34.5, 243.0], [34.6, 243.0], [34.7, 243.0], [34.8, 243.0], [34.9, 243.0], [35.0, 243.0], [35.1, 243.0], [35.2, 243.0], [35.3, 243.0], [35.4, 243.0], [35.5, 243.0], [35.6, 243.0], [35.7, 243.0], [35.8, 243.0], [35.9, 243.0], [36.0, 243.0], [36.1, 243.0], [36.2, 243.0], [36.3, 243.0], [36.4, 243.0], [36.5, 243.0], [36.6, 243.0], [36.7, 243.0], [36.8, 243.0], [36.9, 243.0], [37.0, 244.0], [37.1, 244.0], [37.2, 244.0], [37.3, 244.0], [37.4, 244.0], [37.5, 244.0], [37.6, 244.0], [37.7, 244.0], [37.8, 244.0], [37.9, 244.0], [38.0, 244.0], [38.1, 244.0], [38.2, 244.0], [38.3, 244.0], [38.4, 244.0], [38.5, 244.0], [38.6, 244.0], [38.7, 244.0], [38.8, 244.0], [38.9, 244.0], [39.0, 244.0], [39.1, 244.0], [39.2, 244.0], [39.3, 244.0], [39.4, 244.0], [39.5, 244.0], [39.6, 244.0], [39.7, 244.0], [39.8, 244.0], [39.9, 244.0], [40.0, 244.0], [40.1, 244.0], [40.2, 244.0], [40.3, 244.0], [40.4, 244.0], [40.5, 244.0], [40.6, 244.0], [40.7, 244.0], [40.8, 244.0], [40.9, 244.0], [41.0, 245.0], [41.1, 245.0], [41.2, 245.0], [41.3, 245.0], [41.4, 245.0], [41.5, 245.0], [41.6, 245.0], [41.7, 245.0], [41.8, 245.0], [41.9, 245.0], [42.0, 245.0], [42.1, 245.0], [42.2, 245.0], [42.3, 245.0], [42.4, 245.0], [42.5, 245.0], [42.6, 245.0], [42.7, 245.0], [42.8, 245.0], [42.9, 245.0], [43.0, 245.0], [43.1, 245.0], [43.2, 245.0], [43.3, 245.0], [43.4, 245.0], [43.5, 245.0], [43.6, 245.0], [43.7, 245.0], [43.8, 245.0], [43.9, 245.0], [44.0, 245.0], [44.1, 245.0], [44.2, 245.0], [44.3, 245.0], [44.4, 245.0], [44.5, 245.0], [44.6, 245.0], [44.7, 245.0], [44.8, 245.0], [44.9, 245.0], [45.0, 246.0], [45.1, 246.0], [45.2, 246.0], [45.3, 246.0], [45.4, 246.0], [45.5, 246.0], [45.6, 246.0], [45.7, 246.0], [45.8, 246.0], [45.9, 246.0], [46.0, 246.0], [46.1, 246.0], [46.2, 246.0], [46.3, 246.0], [46.4, 246.0], [46.5, 246.0], [46.6, 246.0], [46.7, 246.0], [46.8, 246.0], [46.9, 246.0], [47.0, 247.0], [47.1, 247.0], [47.2, 247.0], [47.3, 247.0], [47.4, 247.0], [47.5, 247.0], [47.6, 247.0], [47.7, 247.0], [47.8, 247.0], [47.9, 247.0], [48.0, 247.0], [48.1, 247.0], [48.2, 247.0], [48.3, 247.0], [48.4, 247.0], [48.5, 247.0], [48.6, 247.0], [48.7, 247.0], [48.8, 247.0], [48.9, 247.0], [49.0, 247.0], [49.1, 247.0], [49.2, 247.0], [49.3, 247.0], [49.4, 247.0], [49.5, 247.0], [49.6, 247.0], [49.7, 247.0], [49.8, 247.0], [49.9, 247.0], [50.0, 248.0], [50.1, 248.0], [50.2, 248.0], [50.3, 248.0], [50.4, 248.0], [50.5, 248.0], [50.6, 248.0], [50.7, 248.0], [50.8, 248.0], [50.9, 248.0], [51.0, 248.0], [51.1, 248.0], [51.2, 248.0], [51.3, 248.0], [51.4, 248.0], [51.5, 248.0], [51.6, 248.0], [51.7, 248.0], [51.8, 248.0], [51.9, 248.0], [52.0, 248.0], [52.1, 248.0], [52.2, 248.0], [52.3, 248.0], [52.4, 248.0], [52.5, 248.0], [52.6, 248.0], [52.7, 248.0], [52.8, 248.0], [52.9, 248.0], [53.0, 250.0], [53.1, 250.0], [53.2, 250.0], [53.3, 250.0], [53.4, 250.0], [53.5, 250.0], [53.6, 250.0], [53.7, 250.0], [53.8, 250.0], [53.9, 250.0], [54.0, 251.0], [54.1, 251.0], [54.2, 251.0], [54.3, 251.0], [54.4, 251.0], [54.5, 251.0], [54.6, 251.0], [54.7, 251.0], [54.8, 251.0], [54.9, 251.0], [55.0, 252.0], [55.1, 252.0], [55.2, 252.0], [55.3, 252.0], [55.4, 252.0], [55.5, 252.0], [55.6, 252.0], [55.7, 252.0], [55.8, 252.0], [55.9, 252.0], [56.0, 252.0], [56.1, 252.0], [56.2, 252.0], [56.3, 252.0], [56.4, 252.0], [56.5, 252.0], [56.6, 252.0], [56.7, 252.0], [56.8, 252.0], [56.9, 252.0], [57.0, 252.0], [57.1, 252.0], [57.2, 252.0], [57.3, 252.0], [57.4, 252.0], [57.5, 252.0], [57.6, 252.0], [57.7, 252.0], [57.8, 252.0], [57.9, 252.0], [58.0, 252.0], [58.1, 252.0], [58.2, 252.0], [58.3, 252.0], [58.4, 252.0], [58.5, 252.0], [58.6, 252.0], [58.7, 252.0], [58.8, 252.0], [58.9, 252.0], [59.0, 252.0], [59.1, 252.0], [59.2, 252.0], [59.3, 252.0], [59.4, 252.0], [59.5, 252.0], [59.6, 252.0], [59.7, 252.0], [59.8, 252.0], [59.9, 252.0], [60.0, 252.0], [60.1, 252.0], [60.2, 252.0], [60.3, 252.0], [60.4, 252.0], [60.5, 252.0], [60.6, 252.0], [60.7, 252.0], [60.8, 252.0], [60.9, 252.0], [61.0, 253.0], [61.1, 253.0], [61.2, 253.0], [61.3, 253.0], [61.4, 253.0], [61.5, 253.0], [61.6, 253.0], [61.7, 253.0], [61.8, 253.0], [61.9, 253.0], [62.0, 253.0], [62.1, 253.0], [62.2, 253.0], [62.3, 253.0], [62.4, 253.0], [62.5, 253.0], [62.6, 253.0], [62.7, 253.0], [62.8, 253.0], [62.9, 253.0], [63.0, 254.0], [63.1, 254.0], [63.2, 254.0], [63.3, 254.0], [63.4, 254.0], [63.5, 254.0], [63.6, 254.0], [63.7, 254.0], [63.8, 254.0], [63.9, 254.0], [64.0, 254.0], [64.1, 254.0], [64.2, 254.0], [64.3, 254.0], [64.4, 254.0], [64.5, 254.0], [64.6, 254.0], [64.7, 254.0], [64.8, 254.0], [64.9, 254.0], [65.0, 254.0], [65.1, 254.0], [65.2, 254.0], [65.3, 254.0], [65.4, 254.0], [65.5, 254.0], [65.6, 254.0], [65.7, 254.0], [65.8, 254.0], [65.9, 254.0], [66.0, 255.0], [66.1, 255.0], [66.2, 255.0], [66.3, 255.0], [66.4, 255.0], [66.5, 255.0], [66.6, 255.0], [66.7, 255.0], [66.8, 255.0], [66.9, 255.0], [67.0, 256.0], [67.1, 256.0], [67.2, 256.0], [67.3, 256.0], [67.4, 256.0], [67.5, 256.0], [67.6, 256.0], [67.7, 256.0], [67.8, 256.0], [67.9, 256.0], [68.0, 256.0], [68.1, 256.0], [68.2, 256.0], [68.3, 256.0], [68.4, 256.0], [68.5, 256.0], [68.6, 256.0], [68.7, 256.0], [68.8, 256.0], [68.9, 256.0], [69.0, 257.0], [69.1, 257.0], [69.2, 257.0], [69.3, 257.0], [69.4, 257.0], [69.5, 257.0], [69.6, 257.0], [69.7, 257.0], [69.8, 257.0], [69.9, 257.0], [70.0, 257.0], [70.1, 257.0], [70.2, 257.0], [70.3, 257.0], [70.4, 257.0], [70.5, 257.0], [70.6, 257.0], [70.7, 257.0], [70.8, 257.0], [70.9, 257.0], [71.0, 258.0], [71.1, 258.0], [71.2, 258.0], [71.3, 258.0], [71.4, 258.0], [71.5, 258.0], [71.6, 258.0], [71.7, 258.0], [71.8, 258.0], [71.9, 258.0], [72.0, 260.0], [72.1, 260.0], [72.2, 260.0], [72.3, 260.0], [72.4, 260.0], [72.5, 260.0], [72.6, 260.0], [72.7, 260.0], [72.8, 260.0], [72.9, 260.0], [73.0, 260.0], [73.1, 260.0], [73.2, 260.0], [73.3, 260.0], [73.4, 260.0], [73.5, 260.0], [73.6, 260.0], [73.7, 260.0], [73.8, 260.0], [73.9, 260.0], [74.0, 272.0], [74.1, 272.0], [74.2, 272.0], [74.3, 272.0], [74.4, 272.0], [74.5, 272.0], [74.6, 272.0], [74.7, 272.0], [74.8, 272.0], [74.9, 272.0], [75.0, 277.0], [75.1, 277.0], [75.2, 277.0], [75.3, 277.0], [75.4, 277.0], [75.5, 277.0], [75.6, 277.0], [75.7, 277.0], [75.8, 277.0], [75.9, 277.0], [76.0, 287.0], [76.1, 287.0], [76.2, 287.0], [76.3, 287.0], [76.4, 287.0], [76.5, 287.0], [76.6, 287.0], [76.7, 287.0], [76.8, 287.0], [76.9, 287.0], [77.0, 288.0], [77.1, 288.0], [77.2, 288.0], [77.3, 288.0], [77.4, 288.0], [77.5, 288.0], [77.6, 288.0], [77.7, 288.0], [77.8, 288.0], [77.9, 288.0], [78.0, 288.0], [78.1, 288.0], [78.2, 288.0], [78.3, 288.0], [78.4, 288.0], [78.5, 288.0], [78.6, 288.0], [78.7, 288.0], [78.8, 288.0], [78.9, 288.0], [79.0, 289.0], [79.1, 289.0], [79.2, 289.0], [79.3, 289.0], [79.4, 289.0], [79.5, 289.0], [79.6, 289.0], [79.7, 289.0], [79.8, 289.0], [79.9, 289.0], [80.0, 290.0], [80.1, 290.0], [80.2, 290.0], [80.3, 290.0], [80.4, 290.0], [80.5, 290.0], [80.6, 290.0], [80.7, 290.0], [80.8, 290.0], [80.9, 290.0], [81.0, 292.0], [81.1, 292.0], [81.2, 292.0], [81.3, 292.0], [81.4, 292.0], [81.5, 292.0], [81.6, 292.0], [81.7, 292.0], [81.8, 292.0], [81.9, 292.0], [82.0, 292.0], [82.1, 292.0], [82.2, 292.0], [82.3, 292.0], [82.4, 292.0], [82.5, 292.0], [82.6, 292.0], [82.7, 292.0], [82.8, 292.0], [82.9, 292.0], [83.0, 293.0], [83.1, 293.0], [83.2, 293.0], [83.3, 293.0], [83.4, 293.0], [83.5, 293.0], [83.6, 293.0], [83.7, 293.0], [83.8, 293.0], [83.9, 293.0], [84.0, 299.0], [84.1, 299.0], [84.2, 299.0], [84.3, 299.0], [84.4, 299.0], [84.5, 299.0], [84.6, 299.0], [84.7, 299.0], [84.8, 299.0], [84.9, 299.0], [85.0, 305.0], [85.1, 305.0], [85.2, 305.0], [85.3, 305.0], [85.4, 305.0], [85.5, 305.0], [85.6, 305.0], [85.7, 305.0], [85.8, 305.0], [85.9, 305.0], [86.0, 305.0], [86.1, 305.0], [86.2, 305.0], [86.3, 305.0], [86.4, 305.0], [86.5, 305.0], [86.6, 305.0], [86.7, 305.0], [86.8, 305.0], [86.9, 305.0], [87.0, 305.0], [87.1, 305.0], [87.2, 305.0], [87.3, 305.0], [87.4, 305.0], [87.5, 305.0], [87.6, 305.0], [87.7, 305.0], [87.8, 305.0], [87.9, 305.0], [88.0, 306.0], [88.1, 306.0], [88.2, 306.0], [88.3, 306.0], [88.4, 306.0], [88.5, 306.0], [88.6, 306.0], [88.7, 306.0], [88.8, 306.0], [88.9, 306.0], [89.0, 308.0], [89.1, 308.0], [89.2, 308.0], [89.3, 308.0], [89.4, 308.0], [89.5, 308.0], [89.6, 308.0], [89.7, 308.0], [89.8, 308.0], [89.9, 308.0], [90.0, 310.0], [90.1, 310.0], [90.2, 310.0], [90.3, 310.0], [90.4, 310.0], [90.5, 310.0], [90.6, 310.0], [90.7, 310.0], [90.8, 310.0], [90.9, 310.0], [91.0, 311.0], [91.1, 311.0], [91.2, 311.0], [91.3, 311.0], [91.4, 311.0], [91.5, 311.0], [91.6, 311.0], [91.7, 311.0], [91.8, 311.0], [91.9, 311.0], [92.0, 312.0], [92.1, 312.0], [92.2, 312.0], [92.3, 312.0], [92.4, 312.0], [92.5, 312.0], [92.6, 312.0], [92.7, 312.0], [92.8, 312.0], [92.9, 312.0], [93.0, 316.0], [93.1, 316.0], [93.2, 316.0], [93.3, 316.0], [93.4, 316.0], [93.5, 316.0], [93.6, 316.0], [93.7, 316.0], [93.8, 316.0], [93.9, 316.0], [94.0, 317.0], [94.1, 317.0], [94.2, 317.0], [94.3, 317.0], [94.4, 317.0], [94.5, 317.0], [94.6, 317.0], [94.7, 317.0], [94.8, 317.0], [94.9, 317.0], [95.0, 319.0], [95.1, 319.0], [95.2, 319.0], [95.3, 319.0], [95.4, 319.0], [95.5, 319.0], [95.6, 319.0], [95.7, 319.0], [95.8, 319.0], [95.9, 319.0], [96.0, 321.0], [96.1, 321.0], [96.2, 321.0], [96.3, 321.0], [96.4, 321.0], [96.5, 321.0], [96.6, 321.0], [96.7, 321.0], [96.8, 321.0], [96.9, 321.0], [97.0, 322.0], [97.1, 322.0], [97.2, 322.0], [97.3, 322.0], [97.4, 322.0], [97.5, 322.0], [97.6, 322.0], [97.7, 322.0], [97.8, 322.0], [97.9, 322.0], [98.0, 323.0], [98.1, 323.0], [98.2, 323.0], [98.3, 323.0], [98.4, 323.0], [98.5, 323.0], [98.6, 323.0], [98.7, 323.0], [98.8, 323.0], [98.9, 323.0], [99.0, 344.0], [99.1, 344.0], [99.2, 344.0], [99.3, 344.0], [99.4, 344.0], [99.5, 344.0], [99.6, 344.0], [99.7, 344.0], [99.8, 344.0], [99.9, 344.0]], "isOverall": false, "label": "100 Users Load Test", "isController": false}, {"data": [[0.0, 277.0], [0.1, 277.0], [0.2, 278.0], [0.3, 278.0], [0.4, 283.0], [0.5, 284.0], [0.6, 291.0], [0.7, 292.0], [0.8, 294.0], [0.9, 295.0], [1.0, 296.0], [1.1, 301.0], [1.2, 304.0], [1.3, 329.0], [1.4, 329.0], [1.5, 337.0], [1.6, 345.0], [1.7, 346.0], [1.8, 360.0], [1.9, 386.0], [2.0, 387.0], [2.1, 413.0], [2.2, 426.0], [2.3, 429.0], [2.4, 429.0], [2.5, 429.0], [2.6, 431.0], [2.7, 442.0], [2.8, 461.0], [2.9, 462.0], [3.0, 463.0], [3.1, 463.0], [3.2, 465.0], [3.3, 476.0], [3.4, 499.0], [3.5, 499.0], [3.6, 500.0], [3.7, 500.0], [3.8, 510.0], [3.9, 542.0], [4.0, 546.0], [4.1, 553.0], [4.2, 556.0], [4.3, 557.0], [4.4, 566.0], [4.5, 567.0], [4.6, 567.0], [4.7, 568.0], [4.8, 569.0], [4.9, 570.0], [5.0, 571.0], [5.1, 574.0], [5.2, 584.0], [5.3, 585.0], [5.4, 585.0], [5.5, 589.0], [5.6, 589.0], [5.7, 591.0], [5.8, 591.0], [5.9, 600.0], [6.0, 609.0], [6.1, 619.0], [6.2, 626.0], [6.3, 634.0], [6.4, 641.0], [6.5, 669.0], [6.6, 730.0], [6.7, 733.0], [6.8, 783.0], [6.9, 912.0], [7.0, 937.0], [7.1, 947.0], [7.2, 958.0], [7.3, 964.0], [7.4, 1079.0], [7.5, 1162.0], [7.6, 1297.0], [7.7, 1426.0], [7.8, 1476.0], [7.9, 1632.0], [8.0, 1640.0], [8.1, 1646.0], [8.2, 1647.0], [8.3, 1661.0], [8.4, 1685.0], [8.5, 1688.0], [8.6, 1690.0], [8.7, 1719.0], [8.8, 1722.0], [8.9, 1735.0], [9.0, 1779.0], [9.1, 1801.0], [9.2, 1828.0], [9.3, 1844.0], [9.4, 1883.0], [9.5, 1887.0], [9.6, 1905.0], [9.7, 1916.0], [9.8, 1919.0], [9.9, 1926.0], [10.0, 1965.0], [10.1, 1980.0], [10.2, 1986.0], [10.3, 2008.0], [10.4, 2028.0], [10.5, 2043.0], [10.6, 2044.0], [10.7, 2049.0], [10.8, 2059.0], [10.9, 2070.0], [11.0, 2098.0], [11.1, 2102.0], [11.2, 2103.0], [11.3, 2103.0], [11.4, 2113.0], [11.5, 2114.0], [11.6, 2120.0], [11.7, 2122.0], [11.8, 2124.0], [11.9, 2139.0], [12.0, 2144.0], [12.1, 2155.0], [12.2, 2158.0], [12.3, 2193.0], [12.4, 2205.0], [12.5, 2211.0], [12.6, 2217.0], [12.7, 2219.0], [12.8, 2249.0], [12.9, 2252.0], [13.0, 2268.0], [13.1, 2278.0], [13.2, 2305.0], [13.3, 2308.0], [13.4, 2309.0], [13.5, 2319.0], [13.6, 2325.0], [13.7, 2326.0], [13.8, 2331.0], [13.9, 2336.0], [14.0, 2338.0], [14.1, 2344.0], [14.2, 2345.0], [14.3, 2349.0], [14.4, 2352.0], [14.5, 2353.0], [14.6, 2355.0], [14.7, 2363.0], [14.8, 2363.0], [14.9, 2365.0], [15.0, 2366.0], [15.1, 2366.0], [15.2, 2367.0], [15.3, 2367.0], [15.4, 2367.0], [15.5, 2369.0], [15.6, 2369.0], [15.7, 2373.0], [15.8, 2374.0], [15.9, 2375.0], [16.0, 2378.0], [16.1, 2382.0], [16.2, 2386.0], [16.3, 2388.0], [16.4, 2388.0], [16.5, 2393.0], [16.6, 2400.0], [16.7, 2402.0], [16.8, 2402.0], [16.9, 2404.0], [17.0, 2407.0], [17.1, 2409.0], [17.2, 2419.0], [17.3, 2431.0], [17.4, 2433.0], [17.5, 2434.0], [17.6, 2434.0], [17.7, 2437.0], [17.8, 2438.0], [17.9, 2439.0], [18.0, 2439.0], [18.1, 2441.0], [18.2, 2442.0], [18.3, 2443.0], [18.4, 2443.0], [18.5, 2444.0], [18.6, 2444.0], [18.7, 2450.0], [18.8, 2453.0], [18.9, 2455.0], [19.0, 2458.0], [19.1, 2461.0], [19.2, 2464.0], [19.3, 2469.0], [19.4, 2470.0], [19.5, 2474.0], [19.6, 2478.0], [19.7, 2479.0], [19.8, 2511.0], [19.9, 2518.0], [20.0, 2520.0], [20.1, 2521.0], [20.2, 2521.0], [20.3, 2538.0], [20.4, 2544.0], [20.5, 2545.0], [20.6, 2555.0], [20.7, 2569.0], [20.8, 2579.0], [20.9, 2582.0], [21.0, 2600.0], [21.1, 2610.0], [21.2, 2612.0], [21.3, 2638.0], [21.4, 2641.0], [21.5, 2641.0], [21.6, 2644.0], [21.7, 2654.0], [21.8, 2655.0], [21.9, 2662.0], [22.0, 2675.0], [22.1, 2684.0], [22.2, 2686.0], [22.3, 2703.0], [22.4, 2705.0], [22.5, 2722.0], [22.6, 2725.0], [22.7, 2727.0], [22.8, 2730.0], [22.9, 2747.0], [23.0, 2755.0], [23.1, 2761.0], [23.2, 2767.0], [23.3, 2768.0], [23.4, 2772.0], [23.5, 2773.0], [23.6, 2779.0], [23.7, 2789.0], [23.8, 2790.0], [23.9, 2793.0], [24.0, 2798.0], [24.1, 2805.0], [24.2, 2810.0], [24.3, 2813.0], [24.4, 2815.0], [24.5, 2817.0], [24.6, 2820.0], [24.7, 2828.0], [24.8, 2830.0], [24.9, 2838.0], [25.0, 2840.0], [25.1, 2845.0], [25.2, 2892.0], [25.3, 2896.0], [25.4, 2914.0], [25.5, 2915.0], [25.6, 2923.0], [25.7, 2940.0], [25.8, 2947.0], [25.9, 2950.0], [26.0, 2981.0], [26.1, 2992.0], [26.2, 2998.0], [26.3, 3001.0], [26.4, 3001.0], [26.5, 3009.0], [26.6, 3010.0], [26.7, 3018.0], [26.8, 3023.0], [26.9, 3023.0], [27.0, 3024.0], [27.1, 3039.0], [27.2, 3043.0], [27.3, 3046.0], [27.4, 3047.0], [27.5, 3048.0], [27.6, 3053.0], [27.7, 3062.0], [27.8, 3065.0], [27.9, 3065.0], [28.0, 3065.0], [28.1, 3067.0], [28.2, 3081.0], [28.3, 3086.0], [28.4, 3086.0], [28.5, 3093.0], [28.6, 3094.0], [28.7, 3096.0], [28.8, 3097.0], [28.9, 3100.0], [29.0, 3102.0], [29.1, 3108.0], [29.2, 3110.0], [29.3, 3111.0], [29.4, 3112.0], [29.5, 3113.0], [29.6, 3113.0], [29.7, 3114.0], [29.8, 3122.0], [29.9, 3129.0], [30.0, 3131.0], [30.1, 3133.0], [30.2, 3134.0], [30.3, 3136.0], [30.4, 3136.0], [30.5, 3137.0], [30.6, 3138.0], [30.7, 3140.0], [30.8, 3141.0], [30.9, 3143.0], [31.0, 3150.0], [31.1, 3150.0], [31.2, 3151.0], [31.3, 3152.0], [31.4, 3155.0], [31.5, 3157.0], [31.6, 3162.0], [31.7, 3165.0], [31.8, 3167.0], [31.9, 3168.0], [32.0, 3169.0], [32.1, 3176.0], [32.2, 3178.0], [32.3, 3183.0], [32.4, 3186.0], [32.5, 3187.0], [32.6, 3187.0], [32.7, 3191.0], [32.8, 3194.0], [32.9, 3204.0], [33.0, 3207.0], [33.1, 3211.0], [33.2, 3219.0], [33.3, 3226.0], [33.4, 3228.0], [33.5, 3228.0], [33.6, 3235.0], [33.7, 3243.0], [33.8, 3253.0], [33.9, 3256.0], [34.0, 3271.0], [34.1, 3272.0], [34.2, 3282.0], [34.3, 3283.0], [34.4, 3283.0], [34.5, 3299.0], [34.6, 3303.0], [34.7, 3303.0], [34.8, 3303.0], [34.9, 3310.0], [35.0, 3316.0], [35.1, 3321.0], [35.2, 3336.0], [35.3, 3353.0], [35.4, 3370.0], [35.5, 3370.0], [35.6, 3371.0], [35.7, 3386.0], [35.8, 3394.0], [35.9, 3404.0], [36.0, 3411.0], [36.1, 3413.0], [36.2, 3415.0], [36.3, 3418.0], [36.4, 3419.0], [36.5, 3428.0], [36.6, 3429.0], [36.7, 3432.0], [36.8, 3432.0], [36.9, 3439.0], [37.0, 3441.0], [37.1, 3443.0], [37.2, 3443.0], [37.3, 3444.0], [37.4, 3446.0], [37.5, 3453.0], [37.6, 3458.0], [37.7, 3462.0], [37.8, 3464.0], [37.9, 3471.0], [38.0, 3473.0], [38.1, 3479.0], [38.2, 3483.0], [38.3, 3484.0], [38.4, 3485.0], [38.5, 3492.0], [38.6, 3495.0], [38.7, 3499.0], [38.8, 3500.0], [38.9, 3513.0], [39.0, 3514.0], [39.1, 3519.0], [39.2, 3519.0], [39.3, 3523.0], [39.4, 3528.0], [39.5, 3529.0], [39.6, 3530.0], [39.7, 3530.0], [39.8, 3530.0], [39.9, 3533.0], [40.0, 3536.0], [40.1, 3542.0], [40.2, 3544.0], [40.3, 3546.0], [40.4, 3551.0], [40.5, 3553.0], [40.6, 3554.0], [40.7, 3560.0], [40.8, 3560.0], [40.9, 3563.0], [41.0, 3566.0], [41.1, 3566.0], [41.2, 3572.0], [41.3, 3575.0], [41.4, 3575.0], [41.5, 3576.0], [41.6, 3577.0], [41.7, 3581.0], [41.8, 3581.0], [41.9, 3582.0], [42.0, 3582.0], [42.1, 3584.0], [42.2, 3585.0], [42.3, 3588.0], [42.4, 3594.0], [42.5, 3595.0], [42.6, 3595.0], [42.7, 3603.0], [42.8, 3607.0], [42.9, 3607.0], [43.0, 3608.0], [43.1, 3622.0], [43.2, 3623.0], [43.3, 3624.0], [43.4, 3624.0], [43.5, 3628.0], [43.6, 3631.0], [43.7, 3632.0], [43.8, 3634.0], [43.9, 3638.0], [44.0, 3639.0], [44.1, 3639.0], [44.2, 3640.0], [44.3, 3646.0], [44.4, 3650.0], [44.5, 3650.0], [44.6, 3654.0], [44.7, 3657.0], [44.8, 3665.0], [44.9, 3666.0], [45.0, 3671.0], [45.1, 3673.0], [45.2, 3674.0], [45.3, 3677.0], [45.4, 3682.0], [45.5, 3688.0], [45.6, 3690.0], [45.7, 3704.0], [45.8, 3708.0], [45.9, 3715.0], [46.0, 3718.0], [46.1, 3718.0], [46.2, 3719.0], [46.3, 3721.0], [46.4, 3723.0], [46.5, 3729.0], [46.6, 3731.0], [46.7, 3735.0], [46.8, 3739.0], [46.9, 3743.0], [47.0, 3749.0], [47.1, 3749.0], [47.2, 3753.0], [47.3, 3753.0], [47.4, 3753.0], [47.5, 3758.0], [47.6, 3759.0], [47.7, 3767.0], [47.8, 3773.0], [47.9, 3774.0], [48.0, 3780.0], [48.1, 3786.0], [48.2, 3786.0], [48.3, 3791.0], [48.4, 3795.0], [48.5, 3800.0], [48.6, 3803.0], [48.7, 3818.0], [48.8, 3819.0], [48.9, 3820.0], [49.0, 3820.0], [49.1, 3821.0], [49.2, 3821.0], [49.3, 3826.0], [49.4, 3831.0], [49.5, 3831.0], [49.6, 3832.0], [49.7, 3832.0], [49.8, 3836.0], [49.9, 3839.0], [50.0, 3839.0], [50.1, 3839.0], [50.2, 3853.0], [50.3, 3855.0], [50.4, 3857.0], [50.5, 3858.0], [50.6, 3860.0], [50.7, 3863.0], [50.8, 3864.0], [50.9, 3865.0], [51.0, 3866.0], [51.1, 3867.0], [51.2, 3868.0], [51.3, 3869.0], [51.4, 3869.0], [51.5, 3871.0], [51.6, 3873.0], [51.7, 3878.0], [51.8, 3883.0], [51.9, 3883.0], [52.0, 3883.0], [52.1, 3884.0], [52.2, 3885.0], [52.3, 3891.0], [52.4, 3891.0], [52.5, 3891.0], [52.6, 3894.0], [52.7, 3898.0], [52.8, 3903.0], [52.9, 3904.0], [53.0, 3908.0], [53.1, 3913.0], [53.2, 3914.0], [53.3, 3915.0], [53.4, 3916.0], [53.5, 3921.0], [53.6, 3923.0], [53.7, 3923.0], [53.8, 3925.0], [53.9, 3925.0], [54.0, 3926.0], [54.1, 3928.0], [54.2, 3929.0], [54.3, 3931.0], [54.4, 3931.0], [54.5, 3932.0], [54.6, 3934.0], [54.7, 3935.0], [54.8, 3937.0], [54.9, 3946.0], [55.0, 3948.0], [55.1, 3948.0], [55.2, 3950.0], [55.3, 3950.0], [55.4, 3952.0], [55.5, 3954.0], [55.6, 3956.0], [55.7, 3960.0], [55.8, 3961.0], [55.9, 3961.0], [56.0, 3961.0], [56.1, 3962.0], [56.2, 3965.0], [56.3, 3971.0], [56.4, 3976.0], [56.5, 3979.0], [56.6, 3980.0], [56.7, 3982.0], [56.8, 3990.0], [56.9, 3991.0], [57.0, 3992.0], [57.1, 3992.0], [57.2, 3999.0], [57.3, 4002.0], [57.4, 4003.0], [57.5, 4004.0], [57.6, 4004.0], [57.7, 4009.0], [57.8, 4011.0], [57.9, 4015.0], [58.0, 4020.0], [58.1, 4024.0], [58.2, 4024.0], [58.3, 4024.0], [58.4, 4029.0], [58.5, 4032.0], [58.6, 4033.0], [58.7, 4033.0], [58.8, 4034.0], [58.9, 4036.0], [59.0, 4038.0], [59.1, 4039.0], [59.2, 4043.0], [59.3, 4043.0], [59.4, 4050.0], [59.5, 4054.0], [59.6, 4055.0], [59.7, 4056.0], [59.8, 4065.0], [59.9, 4067.0], [60.0, 4075.0], [60.1, 4077.0], [60.2, 4079.0], [60.3, 4080.0], [60.4, 4086.0], [60.5, 4089.0], [60.6, 4090.0], [60.7, 4090.0], [60.8, 4095.0], [60.9, 4107.0], [61.0, 4108.0], [61.1, 4109.0], [61.2, 4110.0], [61.3, 4111.0], [61.4, 4126.0], [61.5, 4126.0], [61.6, 4127.0], [61.7, 4128.0], [61.8, 4131.0], [61.9, 4147.0], [62.0, 4155.0], [62.1, 4160.0], [62.2, 4161.0], [62.3, 4162.0], [62.4, 4168.0], [62.5, 4168.0], [62.6, 4169.0], [62.7, 4173.0], [62.8, 4177.0], [62.9, 4186.0], [63.0, 4189.0], [63.1, 4191.0], [63.2, 4193.0], [63.3, 4200.0], [63.4, 4200.0], [63.5, 4203.0], [63.6, 4204.0], [63.7, 4207.0], [63.8, 4213.0], [63.9, 4213.0], [64.0, 4214.0], [64.1, 4216.0], [64.2, 4216.0], [64.3, 4217.0], [64.4, 4217.0], [64.5, 4219.0], [64.6, 4220.0], [64.7, 4221.0], [64.8, 4223.0], [64.9, 4223.0], [65.0, 4225.0], [65.1, 4227.0], [65.2, 4228.0], [65.3, 4234.0], [65.4, 4234.0], [65.5, 4235.0], [65.6, 4236.0], [65.7, 4237.0], [65.8, 4241.0], [65.9, 4245.0], [66.0, 4246.0], [66.1, 4247.0], [66.2, 4252.0], [66.3, 4254.0], [66.4, 4256.0], [66.5, 4256.0], [66.6, 4258.0], [66.7, 4261.0], [66.8, 4262.0], [66.9, 4265.0], [67.0, 4267.0], [67.1, 4269.0], [67.2, 4276.0], [67.3, 4277.0], [67.4, 4279.0], [67.5, 4280.0], [67.6, 4282.0], [67.7, 4282.0], [67.8, 4282.0], [67.9, 4283.0], [68.0, 4284.0], [68.1, 4285.0], [68.2, 4285.0], [68.3, 4288.0], [68.4, 4295.0], [68.5, 4299.0], [68.6, 4299.0], [68.7, 4299.0], [68.8, 4301.0], [68.9, 4302.0], [69.0, 4306.0], [69.1, 4307.0], [69.2, 4307.0], [69.3, 4307.0], [69.4, 4312.0], [69.5, 4314.0], [69.6, 4319.0], [69.7, 4320.0], [69.8, 4326.0], [69.9, 4326.0], [70.0, 4327.0], [70.1, 4328.0], [70.2, 4331.0], [70.3, 4333.0], [70.4, 4333.0], [70.5, 4336.0], [70.6, 4337.0], [70.7, 4346.0], [70.8, 4346.0], [70.9, 4349.0], [71.0, 4350.0], [71.1, 4351.0], [71.2, 4353.0], [71.3, 4355.0], [71.4, 4355.0], [71.5, 4361.0], [71.6, 4361.0], [71.7, 4368.0], [71.8, 4371.0], [71.9, 4372.0], [72.0, 4376.0], [72.1, 4380.0], [72.2, 4383.0], [72.3, 4391.0], [72.4, 4393.0], [72.5, 4394.0], [72.6, 4396.0], [72.7, 4401.0], [72.8, 4401.0], [72.9, 4403.0], [73.0, 4409.0], [73.1, 4409.0], [73.2, 4420.0], [73.3, 4423.0], [73.4, 4423.0], [73.5, 4426.0], [73.6, 4427.0], [73.7, 4428.0], [73.8, 4428.0], [73.9, 4430.0], [74.0, 4430.0], [74.1, 4431.0], [74.2, 4432.0], [74.3, 4434.0], [74.4, 4436.0], [74.5, 4440.0], [74.6, 4443.0], [74.7, 4444.0], [74.8, 4447.0], [74.9, 4450.0], [75.0, 4455.0], [75.1, 4460.0], [75.2, 4463.0], [75.3, 4465.0], [75.4, 4483.0], [75.5, 4487.0], [75.6, 4490.0], [75.7, 4496.0], [75.8, 4500.0], [75.9, 4501.0], [76.0, 4503.0], [76.1, 4504.0], [76.2, 4506.0], [76.3, 4508.0], [76.4, 4510.0], [76.5, 4512.0], [76.6, 4514.0], [76.7, 4516.0], [76.8, 4519.0], [76.9, 4525.0], [77.0, 4526.0], [77.1, 4529.0], [77.2, 4531.0], [77.3, 4539.0], [77.4, 4540.0], [77.5, 4541.0], [77.6, 4542.0], [77.7, 4544.0], [77.8, 4544.0], [77.9, 4546.0], [78.0, 4550.0], [78.1, 4552.0], [78.2, 4554.0], [78.3, 4558.0], [78.4, 4580.0], [78.5, 4592.0], [78.6, 4595.0], [78.7, 4599.0], [78.8, 4607.0], [78.9, 4608.0], [79.0, 4618.0], [79.1, 4621.0], [79.2, 4639.0], [79.3, 4656.0], [79.4, 4656.0], [79.5, 4661.0], [79.6, 4664.0], [79.7, 4676.0], [79.8, 4681.0], [79.9, 4688.0], [80.0, 4694.0], [80.1, 4696.0], [80.2, 4700.0], [80.3, 4706.0], [80.4, 4744.0], [80.5, 4764.0], [80.6, 4768.0], [80.7, 4785.0], [80.8, 4802.0], [80.9, 4823.0], [81.0, 4827.0], [81.1, 4829.0], [81.2, 4840.0], [81.3, 4848.0], [81.4, 4889.0], [81.5, 4896.0], [81.6, 4917.0], [81.7, 4937.0], [81.8, 4943.0], [81.9, 4948.0], [82.0, 4950.0], [82.1, 4961.0], [82.2, 4975.0], [82.3, 4977.0], [82.4, 4994.0], [82.5, 5000.0], [82.6, 5001.0], [82.7, 5018.0], [82.8, 5020.0], [82.9, 5041.0], [83.0, 5069.0], [83.1, 5071.0], [83.2, 5111.0], [83.3, 5124.0], [83.4, 5147.0], [83.5, 5160.0], [83.6, 5168.0], [83.7, 5177.0], [83.8, 5181.0], [83.9, 5183.0], [84.0, 5186.0], [84.1, 5188.0], [84.2, 5222.0], [84.3, 5224.0], [84.4, 5228.0], [84.5, 5267.0], [84.6, 5268.0], [84.7, 5275.0], [84.8, 5276.0], [84.9, 5277.0], [85.0, 5284.0], [85.1, 5285.0], [85.2, 5288.0], [85.3, 5302.0], [85.4, 5304.0], [85.5, 5314.0], [85.6, 5322.0], [85.7, 5329.0], [85.8, 5336.0], [85.9, 5340.0], [86.0, 5343.0], [86.1, 5348.0], [86.2, 5358.0], [86.3, 5361.0], [86.4, 5378.0], [86.5, 5386.0], [86.6, 5388.0], [86.7, 5408.0], [86.8, 5408.0], [86.9, 5418.0], [87.0, 5419.0], [87.1, 5422.0], [87.2, 5424.0], [87.3, 5434.0], [87.4, 5440.0], [87.5, 5441.0], [87.6, 5452.0], [87.7, 5453.0], [87.8, 5454.0], [87.9, 5460.0], [88.0, 5493.0], [88.1, 5502.0], [88.2, 5506.0], [88.3, 5506.0], [88.4, 5521.0], [88.5, 5522.0], [88.6, 5528.0], [88.7, 5532.0], [88.8, 5543.0], [88.9, 5547.0], [89.0, 5555.0], [89.1, 5559.0], [89.2, 5574.0], [89.3, 5589.0], [89.4, 5620.0], [89.5, 5642.0], [89.6, 5644.0], [89.7, 5655.0], [89.8, 5669.0], [89.9, 5671.0], [90.0, 5682.0], [90.1, 5696.0], [90.2, 5715.0], [90.3, 5744.0], [90.4, 5763.0], [90.5, 5765.0], [90.6, 5765.0], [90.7, 5783.0], [90.8, 5785.0], [90.9, 5831.0], [91.0, 5843.0], [91.1, 5894.0], [91.2, 5900.0], [91.3, 5923.0], [91.4, 5947.0], [91.5, 6029.0], [91.6, 6031.0], [91.7, 6081.0], [91.8, 6087.0], [91.9, 6121.0], [92.0, 6124.0], [92.1, 6155.0], [92.2, 6159.0], [92.3, 6174.0], [92.4, 6198.0], [92.5, 6204.0], [92.6, 6204.0], [92.7, 6225.0], [92.8, 6255.0], [92.9, 6293.0], [93.0, 6326.0], [93.1, 6338.0], [93.2, 6428.0], [93.3, 6480.0], [93.4, 6485.0], [93.5, 6495.0], [93.6, 6514.0], [93.7, 6520.0], [93.8, 6530.0], [93.9, 6579.0], [94.0, 6598.0], [94.1, 6601.0], [94.2, 6602.0], [94.3, 6674.0], [94.4, 6686.0], [94.5, 6692.0], [94.6, 6732.0], [94.7, 6749.0], [94.8, 6760.0], [94.9, 6775.0], [95.0, 6802.0], [95.1, 6822.0], [95.2, 6904.0], [95.3, 6916.0], [95.4, 6924.0], [95.5, 6978.0], [95.6, 7027.0], [95.7, 7030.0], [95.8, 7083.0], [95.9, 7188.0], [96.0, 7214.0], [96.1, 7243.0], [96.2, 7391.0], [96.3, 7430.0], [96.4, 7512.0], [96.5, 7536.0], [96.6, 7604.0], [96.7, 7609.0], [96.8, 7797.0], [96.9, 7810.0], [97.0, 7837.0], [97.1, 7945.0], [97.2, 8069.0], [97.3, 8097.0], [97.4, 8142.0], [97.5, 8956.0], [97.6, 9325.0], [97.7, 9739.0], [97.8, 9933.0], [97.9, 9986.0], [98.0, 10237.0], [98.1, 10318.0], [98.2, 10367.0], [98.3, 10440.0], [98.4, 10808.0], [98.5, 10815.0], [98.6, 10964.0], [98.7, 11209.0], [98.8, 11294.0], [98.9, 11313.0], [99.0, 11323.0], [99.1, 11831.0], [99.2, 11965.0], [99.3, 12157.0], [99.4, 12358.0], [99.5, 16150.0], [99.6, 21525.0], [99.7, 21530.0], [99.8, 24400.0], [99.9, 27095.0]], "isOverall": false, "label": "1000 Users Load Test", "isController": false}, {"data": [[0.0, 358.0], [0.1, 358.0], [0.2, 358.0], [0.3, 358.0], [0.4, 358.0], [0.5, 410.0], [0.6, 410.0], [0.7, 410.0], [0.8, 410.0], [0.9, 410.0], [1.0, 417.0], [1.1, 417.0], [1.2, 417.0], [1.3, 417.0], [1.4, 417.0], [1.5, 418.0], [1.6, 418.0], [1.7, 418.0], [1.8, 418.0], [1.9, 418.0], [2.0, 418.0], [2.1, 418.0], [2.2, 418.0], [2.3, 418.0], [2.4, 418.0], [2.5, 420.0], [2.6, 420.0], [2.7, 420.0], [2.8, 420.0], [2.9, 420.0], [3.0, 420.0], [3.1, 420.0], [3.2, 420.0], [3.3, 420.0], [3.4, 420.0], [3.5, 429.0], [3.6, 429.0], [3.7, 429.0], [3.8, 429.0], [3.9, 429.0], [4.0, 430.0], [4.1, 430.0], [4.2, 430.0], [4.3, 430.0], [4.4, 430.0], [4.5, 431.0], [4.6, 431.0], [4.7, 431.0], [4.8, 431.0], [4.9, 431.0], [5.0, 434.0], [5.1, 434.0], [5.2, 434.0], [5.3, 434.0], [5.4, 434.0], [5.5, 436.0], [5.6, 436.0], [5.7, 436.0], [5.8, 436.0], [5.9, 436.0], [6.0, 436.0], [6.1, 436.0], [6.2, 436.0], [6.3, 436.0], [6.4, 436.0], [6.5, 438.0], [6.6, 438.0], [6.7, 438.0], [6.8, 438.0], [6.9, 438.0], [7.0, 439.0], [7.1, 439.0], [7.2, 439.0], [7.3, 439.0], [7.4, 439.0], [7.5, 440.0], [7.6, 440.0], [7.7, 440.0], [7.8, 440.0], [7.9, 440.0], [8.0, 440.0], [8.1, 440.0], [8.2, 440.0], [8.3, 440.0], [8.4, 440.0], [8.5, 440.0], [8.6, 440.0], [8.7, 440.0], [8.8, 440.0], [8.9, 440.0], [9.0, 441.0], [9.1, 441.0], [9.2, 441.0], [9.3, 441.0], [9.4, 441.0], [9.5, 441.0], [9.6, 441.0], [9.7, 441.0], [9.8, 441.0], [9.9, 441.0], [10.0, 441.0], [10.1, 441.0], [10.2, 441.0], [10.3, 441.0], [10.4, 441.0], [10.5, 441.0], [10.6, 441.0], [10.7, 441.0], [10.8, 441.0], [10.9, 441.0], [11.0, 441.0], [11.1, 441.0], [11.2, 441.0], [11.3, 441.0], [11.4, 441.0], [11.5, 441.0], [11.6, 441.0], [11.7, 441.0], [11.8, 441.0], [11.9, 441.0], [12.0, 442.0], [12.1, 442.0], [12.2, 442.0], [12.3, 442.0], [12.4, 442.0], [12.5, 442.0], [12.6, 442.0], [12.7, 442.0], [12.8, 442.0], [12.9, 442.0], [13.0, 442.0], [13.1, 442.0], [13.2, 442.0], [13.3, 442.0], [13.4, 442.0], [13.5, 444.0], [13.6, 444.0], [13.7, 444.0], [13.8, 444.0], [13.9, 444.0], [14.0, 444.0], [14.1, 444.0], [14.2, 444.0], [14.3, 444.0], [14.4, 444.0], [14.5, 444.0], [14.6, 444.0], [14.7, 444.0], [14.8, 444.0], [14.9, 444.0], [15.0, 444.0], [15.1, 444.0], [15.2, 444.0], [15.3, 444.0], [15.4, 444.0], [15.5, 445.0], [15.6, 445.0], [15.7, 445.0], [15.8, 445.0], [15.9, 445.0], [16.0, 445.0], [16.1, 445.0], [16.2, 445.0], [16.3, 445.0], [16.4, 445.0], [16.5, 445.0], [16.6, 445.0], [16.7, 445.0], [16.8, 445.0], [16.9, 445.0], [17.0, 445.0], [17.1, 445.0], [17.2, 445.0], [17.3, 445.0], [17.4, 445.0], [17.5, 445.0], [17.6, 445.0], [17.7, 445.0], [17.8, 445.0], [17.9, 445.0], [18.0, 446.0], [18.1, 446.0], [18.2, 446.0], [18.3, 446.0], [18.4, 446.0], [18.5, 446.0], [18.6, 446.0], [18.7, 446.0], [18.8, 446.0], [18.9, 446.0], [19.0, 447.0], [19.1, 447.0], [19.2, 447.0], [19.3, 447.0], [19.4, 447.0], [19.5, 447.0], [19.6, 447.0], [19.7, 447.0], [19.8, 447.0], [19.9, 447.0], [20.0, 447.0], [20.1, 447.0], [20.2, 447.0], [20.3, 447.0], [20.4, 447.0], [20.5, 447.0], [20.6, 447.0], [20.7, 447.0], [20.8, 447.0], [20.9, 447.0], [21.0, 447.0], [21.1, 447.0], [21.2, 447.0], [21.3, 447.0], [21.4, 447.0], [21.5, 447.0], [21.6, 447.0], [21.7, 447.0], [21.8, 447.0], [21.9, 447.0], [22.0, 448.0], [22.1, 448.0], [22.2, 448.0], [22.3, 448.0], [22.4, 448.0], [22.5, 448.0], [22.6, 448.0], [22.7, 448.0], [22.8, 448.0], [22.9, 448.0], [23.0, 448.0], [23.1, 448.0], [23.2, 448.0], [23.3, 448.0], [23.4, 448.0], [23.5, 449.0], [23.6, 449.0], [23.7, 449.0], [23.8, 449.0], [23.9, 449.0], [24.0, 449.0], [24.1, 449.0], [24.2, 449.0], [24.3, 449.0], [24.4, 449.0], [24.5, 449.0], [24.6, 449.0], [24.7, 449.0], [24.8, 449.0], [24.9, 449.0], [25.0, 450.0], [25.1, 450.0], [25.2, 450.0], [25.3, 450.0], [25.4, 450.0], [25.5, 450.0], [25.6, 450.0], [25.7, 450.0], [25.8, 450.0], [25.9, 450.0], [26.0, 450.0], [26.1, 450.0], [26.2, 450.0], [26.3, 450.0], [26.4, 450.0], [26.5, 450.0], [26.6, 450.0], [26.7, 450.0], [26.8, 450.0], [26.9, 450.0], [27.0, 450.0], [27.1, 450.0], [27.2, 450.0], [27.3, 450.0], [27.4, 450.0], [27.5, 450.0], [27.6, 450.0], [27.7, 450.0], [27.8, 450.0], [27.9, 450.0], [28.0, 450.0], [28.1, 450.0], [28.2, 450.0], [28.3, 450.0], [28.4, 450.0], [28.5, 450.0], [28.6, 450.0], [28.7, 450.0], [28.8, 450.0], [28.9, 450.0], [29.0, 450.0], [29.1, 450.0], [29.2, 450.0], [29.3, 450.0], [29.4, 450.0], [29.5, 451.0], [29.6, 451.0], [29.7, 451.0], [29.8, 451.0], [29.9, 451.0], [30.0, 452.0], [30.1, 452.0], [30.2, 452.0], [30.3, 452.0], [30.4, 452.0], [30.5, 452.0], [30.6, 452.0], [30.7, 452.0], [30.8, 452.0], [30.9, 452.0], [31.0, 452.0], [31.1, 452.0], [31.2, 452.0], [31.3, 452.0], [31.4, 452.0], [31.5, 453.0], [31.6, 453.0], [31.7, 453.0], [31.8, 453.0], [31.9, 453.0], [32.0, 453.0], [32.1, 453.0], [32.2, 453.0], [32.3, 453.0], [32.4, 453.0], [32.5, 454.0], [32.6, 454.0], [32.7, 454.0], [32.8, 454.0], [32.9, 454.0], [33.0, 454.0], [33.1, 454.0], [33.2, 454.0], [33.3, 454.0], [33.4, 454.0], [33.5, 455.0], [33.6, 455.0], [33.7, 455.0], [33.8, 455.0], [33.9, 455.0], [34.0, 455.0], [34.1, 455.0], [34.2, 455.0], [34.3, 455.0], [34.4, 455.0], [34.5, 455.0], [34.6, 455.0], [34.7, 455.0], [34.8, 455.0], [34.9, 455.0], [35.0, 456.0], [35.1, 456.0], [35.2, 456.0], [35.3, 456.0], [35.4, 456.0], [35.5, 456.0], [35.6, 456.0], [35.7, 456.0], [35.8, 456.0], [35.9, 456.0], [36.0, 457.0], [36.1, 457.0], [36.2, 457.0], [36.3, 457.0], [36.4, 457.0], [36.5, 457.0], [36.6, 457.0], [36.7, 457.0], [36.8, 457.0], [36.9, 457.0], [37.0, 457.0], [37.1, 457.0], [37.2, 457.0], [37.3, 457.0], [37.4, 457.0], [37.5, 457.0], [37.6, 457.0], [37.7, 457.0], [37.8, 457.0], [37.9, 457.0], [38.0, 457.0], [38.1, 457.0], [38.2, 457.0], [38.3, 457.0], [38.4, 457.0], [38.5, 458.0], [38.6, 458.0], [38.7, 458.0], [38.8, 458.0], [38.9, 458.0], [39.0, 458.0], [39.1, 458.0], [39.2, 458.0], [39.3, 458.0], [39.4, 458.0], [39.5, 459.0], [39.6, 459.0], [39.7, 459.0], [39.8, 459.0], [39.9, 459.0], [40.0, 459.0], [40.1, 459.0], [40.2, 459.0], [40.3, 459.0], [40.4, 459.0], [40.5, 460.0], [40.6, 460.0], [40.7, 460.0], [40.8, 460.0], [40.9, 460.0], [41.0, 460.0], [41.1, 460.0], [41.2, 460.0], [41.3, 460.0], [41.4, 460.0], [41.5, 460.0], [41.6, 460.0], [41.7, 460.0], [41.8, 460.0], [41.9, 460.0], [42.0, 461.0], [42.1, 461.0], [42.2, 461.0], [42.3, 461.0], [42.4, 461.0], [42.5, 461.0], [42.6, 461.0], [42.7, 461.0], [42.8, 461.0], [42.9, 461.0], [43.0, 461.0], [43.1, 461.0], [43.2, 461.0], [43.3, 461.0], [43.4, 461.0], [43.5, 461.0], [43.6, 461.0], [43.7, 461.0], [43.8, 461.0], [43.9, 461.0], [44.0, 462.0], [44.1, 462.0], [44.2, 462.0], [44.3, 462.0], [44.4, 462.0], [44.5, 462.0], [44.6, 462.0], [44.7, 462.0], [44.8, 462.0], [44.9, 462.0], [45.0, 463.0], [45.1, 463.0], [45.2, 463.0], [45.3, 463.0], [45.4, 463.0], [45.5, 464.0], [45.6, 464.0], [45.7, 464.0], [45.8, 464.0], [45.9, 464.0], [46.0, 465.0], [46.1, 465.0], [46.2, 465.0], [46.3, 465.0], [46.4, 465.0], [46.5, 467.0], [46.6, 467.0], [46.7, 467.0], [46.8, 467.0], [46.9, 467.0], [47.0, 467.0], [47.1, 467.0], [47.2, 467.0], [47.3, 467.0], [47.4, 467.0], [47.5, 469.0], [47.6, 469.0], [47.7, 469.0], [47.8, 469.0], [47.9, 469.0], [48.0, 469.0], [48.1, 469.0], [48.2, 469.0], [48.3, 469.0], [48.4, 469.0], [48.5, 469.0], [48.6, 469.0], [48.7, 469.0], [48.8, 469.0], [48.9, 469.0], [49.0, 469.0], [49.1, 469.0], [49.2, 469.0], [49.3, 469.0], [49.4, 469.0], [49.5, 471.0], [49.6, 471.0], [49.7, 471.0], [49.8, 471.0], [49.9, 471.0], [50.0, 471.0], [50.1, 471.0], [50.2, 471.0], [50.3, 471.0], [50.4, 471.0], [50.5, 472.0], [50.6, 472.0], [50.7, 472.0], [50.8, 472.0], [50.9, 472.0], [51.0, 472.0], [51.1, 472.0], [51.2, 472.0], [51.3, 472.0], [51.4, 472.0], [51.5, 473.0], [51.6, 473.0], [51.7, 473.0], [51.8, 473.0], [51.9, 473.0], [52.0, 475.0], [52.1, 475.0], [52.2, 475.0], [52.3, 475.0], [52.4, 475.0], [52.5, 475.0], [52.6, 475.0], [52.7, 475.0], [52.8, 475.0], [52.9, 475.0], [53.0, 477.0], [53.1, 477.0], [53.2, 477.0], [53.3, 477.0], [53.4, 477.0], [53.5, 477.0], [53.6, 477.0], [53.7, 477.0], [53.8, 477.0], [53.9, 477.0], [54.0, 477.0], [54.1, 477.0], [54.2, 477.0], [54.3, 477.0], [54.4, 477.0], [54.5, 478.0], [54.6, 478.0], [54.7, 478.0], [54.8, 478.0], [54.9, 478.0], [55.0, 479.0], [55.1, 479.0], [55.2, 479.0], [55.3, 479.0], [55.4, 479.0], [55.5, 480.0], [55.6, 480.0], [55.7, 480.0], [55.8, 480.0], [55.9, 480.0], [56.0, 483.0], [56.1, 483.0], [56.2, 483.0], [56.3, 483.0], [56.4, 483.0], [56.5, 485.0], [56.6, 485.0], [56.7, 485.0], [56.8, 485.0], [56.9, 485.0], [57.0, 485.0], [57.1, 485.0], [57.2, 485.0], [57.3, 485.0], [57.4, 485.0], [57.5, 485.0], [57.6, 485.0], [57.7, 485.0], [57.8, 485.0], [57.9, 485.0], [58.0, 486.0], [58.1, 486.0], [58.2, 486.0], [58.3, 486.0], [58.4, 486.0], [58.5, 487.0], [58.6, 487.0], [58.7, 487.0], [58.8, 487.0], [58.9, 487.0], [59.0, 488.0], [59.1, 488.0], [59.2, 488.0], [59.3, 488.0], [59.4, 488.0], [59.5, 492.0], [59.6, 492.0], [59.7, 492.0], [59.8, 492.0], [59.9, 492.0], [60.0, 495.0], [60.1, 495.0], [60.2, 495.0], [60.3, 495.0], [60.4, 495.0], [60.5, 495.0], [60.6, 495.0], [60.7, 495.0], [60.8, 495.0], [60.9, 495.0], [61.0, 497.0], [61.1, 497.0], [61.2, 497.0], [61.3, 497.0], [61.4, 497.0], [61.5, 497.0], [61.6, 497.0], [61.7, 497.0], [61.8, 497.0], [61.9, 497.0], [62.0, 499.0], [62.1, 499.0], [62.2, 499.0], [62.3, 499.0], [62.4, 499.0], [62.5, 499.0], [62.6, 499.0], [62.7, 499.0], [62.8, 499.0], [62.9, 499.0], [63.0, 513.0], [63.1, 513.0], [63.2, 513.0], [63.3, 513.0], [63.4, 513.0], [63.5, 515.0], [63.6, 515.0], [63.7, 515.0], [63.8, 515.0], [63.9, 515.0], [64.0, 520.0], [64.1, 520.0], [64.2, 520.0], [64.3, 520.0], [64.4, 520.0], [64.5, 521.0], [64.6, 521.0], [64.7, 521.0], [64.8, 521.0], [64.9, 521.0], [65.0, 521.0], [65.1, 521.0], [65.2, 521.0], [65.3, 521.0], [65.4, 521.0], [65.5, 523.0], [65.6, 523.0], [65.7, 523.0], [65.8, 523.0], [65.9, 523.0], [66.0, 524.0], [66.1, 524.0], [66.2, 524.0], [66.3, 524.0], [66.4, 524.0], [66.5, 526.0], [66.6, 526.0], [66.7, 526.0], [66.8, 526.0], [66.9, 526.0], [67.0, 526.0], [67.1, 526.0], [67.2, 526.0], [67.3, 526.0], [67.4, 526.0], [67.5, 528.0], [67.6, 528.0], [67.7, 528.0], [67.8, 528.0], [67.9, 528.0], [68.0, 531.0], [68.1, 531.0], [68.2, 531.0], [68.3, 531.0], [68.4, 531.0], [68.5, 535.0], [68.6, 535.0], [68.7, 535.0], [68.8, 535.0], [68.9, 535.0], [69.0, 538.0], [69.1, 538.0], [69.2, 538.0], [69.3, 538.0], [69.4, 538.0], [69.5, 538.0], [69.6, 538.0], [69.7, 538.0], [69.8, 538.0], [69.9, 538.0], [70.0, 551.0], [70.1, 551.0], [70.2, 551.0], [70.3, 551.0], [70.4, 551.0], [70.5, 569.0], [70.6, 569.0], [70.7, 569.0], [70.8, 569.0], [70.9, 569.0], [71.0, 572.0], [71.1, 572.0], [71.2, 572.0], [71.3, 572.0], [71.4, 572.0], [71.5, 583.0], [71.6, 583.0], [71.7, 583.0], [71.8, 583.0], [71.9, 583.0], [72.0, 584.0], [72.1, 584.0], [72.2, 584.0], [72.3, 584.0], [72.4, 584.0], [72.5, 585.0], [72.6, 585.0], [72.7, 585.0], [72.8, 585.0], [72.9, 585.0], [73.0, 585.0], [73.1, 585.0], [73.2, 585.0], [73.3, 585.0], [73.4, 585.0], [73.5, 586.0], [73.6, 586.0], [73.7, 586.0], [73.8, 586.0], [73.9, 586.0], [74.0, 587.0], [74.1, 587.0], [74.2, 587.0], [74.3, 587.0], [74.4, 587.0], [74.5, 587.0], [74.6, 587.0], [74.7, 587.0], [74.8, 587.0], [74.9, 587.0], [75.0, 588.0], [75.1, 588.0], [75.2, 588.0], [75.3, 588.0], [75.4, 588.0], [75.5, 588.0], [75.6, 588.0], [75.7, 588.0], [75.8, 588.0], [75.9, 588.0], [76.0, 588.0], [76.1, 588.0], [76.2, 588.0], [76.3, 588.0], [76.4, 588.0], [76.5, 589.0], [76.6, 589.0], [76.7, 589.0], [76.8, 589.0], [76.9, 589.0], [77.0, 589.0], [77.1, 589.0], [77.2, 589.0], [77.3, 589.0], [77.4, 589.0], [77.5, 589.0], [77.6, 589.0], [77.7, 589.0], [77.8, 589.0], [77.9, 589.0], [78.0, 589.0], [78.1, 589.0], [78.2, 589.0], [78.3, 589.0], [78.4, 589.0], [78.5, 590.0], [78.6, 590.0], [78.7, 590.0], [78.8, 590.0], [78.9, 590.0], [79.0, 591.0], [79.1, 591.0], [79.2, 591.0], [79.3, 591.0], [79.4, 591.0], [79.5, 591.0], [79.6, 591.0], [79.7, 591.0], [79.8, 591.0], [79.9, 591.0], [80.0, 591.0], [80.1, 591.0], [80.2, 591.0], [80.3, 591.0], [80.4, 591.0], [80.5, 591.0], [80.6, 591.0], [80.7, 591.0], [80.8, 591.0], [80.9, 591.0], [81.0, 593.0], [81.1, 593.0], [81.2, 593.0], [81.3, 593.0], [81.4, 593.0], [81.5, 595.0], [81.6, 595.0], [81.7, 595.0], [81.8, 595.0], [81.9, 595.0], [82.0, 595.0], [82.1, 595.0], [82.2, 595.0], [82.3, 595.0], [82.4, 595.0], [82.5, 596.0], [82.6, 596.0], [82.7, 596.0], [82.8, 596.0], [82.9, 596.0], [83.0, 598.0], [83.1, 598.0], [83.2, 598.0], [83.3, 598.0], [83.4, 598.0], [83.5, 599.0], [83.6, 599.0], [83.7, 599.0], [83.8, 599.0], [83.9, 599.0], [84.0, 599.0], [84.1, 599.0], [84.2, 599.0], [84.3, 599.0], [84.4, 599.0], [84.5, 599.0], [84.6, 599.0], [84.7, 599.0], [84.8, 599.0], [84.9, 599.0], [85.0, 600.0], [85.1, 600.0], [85.2, 600.0], [85.3, 600.0], [85.4, 600.0], [85.5, 600.0], [85.6, 600.0], [85.7, 600.0], [85.8, 600.0], [85.9, 600.0], [86.0, 600.0], [86.1, 600.0], [86.2, 600.0], [86.3, 600.0], [86.4, 600.0], [86.5, 601.0], [86.6, 601.0], [86.7, 601.0], [86.8, 601.0], [86.9, 601.0], [87.0, 601.0], [87.1, 601.0], [87.2, 601.0], [87.3, 601.0], [87.4, 601.0], [87.5, 601.0], [87.6, 601.0], [87.7, 601.0], [87.8, 601.0], [87.9, 601.0], [88.0, 602.0], [88.1, 602.0], [88.2, 602.0], [88.3, 602.0], [88.4, 602.0], [88.5, 603.0], [88.6, 603.0], [88.7, 603.0], [88.8, 603.0], [88.9, 603.0], [89.0, 605.0], [89.1, 605.0], [89.2, 605.0], [89.3, 605.0], [89.4, 605.0], [89.5, 606.0], [89.6, 606.0], [89.7, 606.0], [89.8, 606.0], [89.9, 606.0], [90.0, 607.0], [90.1, 607.0], [90.2, 607.0], [90.3, 607.0], [90.4, 607.0], [90.5, 608.0], [90.6, 608.0], [90.7, 608.0], [90.8, 608.0], [90.9, 608.0], [91.0, 609.0], [91.1, 609.0], [91.2, 609.0], [91.3, 609.0], [91.4, 609.0], [91.5, 610.0], [91.6, 610.0], [91.7, 610.0], [91.8, 610.0], [91.9, 610.0], [92.0, 613.0], [92.1, 613.0], [92.2, 613.0], [92.3, 613.0], [92.4, 613.0], [92.5, 613.0], [92.6, 613.0], [92.7, 613.0], [92.8, 613.0], [92.9, 613.0], [93.0, 614.0], [93.1, 614.0], [93.2, 614.0], [93.3, 614.0], [93.4, 614.0], [93.5, 615.0], [93.6, 615.0], [93.7, 615.0], [93.8, 615.0], [93.9, 615.0], [94.0, 619.0], [94.1, 619.0], [94.2, 619.0], [94.3, 619.0], [94.4, 619.0], [94.5, 619.0], [94.6, 619.0], [94.7, 619.0], [94.8, 619.0], [94.9, 619.0], [95.0, 622.0], [95.1, 622.0], [95.2, 622.0], [95.3, 622.0], [95.4, 622.0], [95.5, 622.0], [95.6, 622.0], [95.7, 622.0], [95.8, 622.0], [95.9, 622.0], [96.0, 626.0], [96.1, 626.0], [96.2, 626.0], [96.3, 626.0], [96.4, 626.0], [96.5, 628.0], [96.6, 628.0], [96.7, 628.0], [96.8, 628.0], [96.9, 628.0], [97.0, 629.0], [97.1, 629.0], [97.2, 629.0], [97.3, 629.0], [97.4, 629.0], [97.5, 631.0], [97.6, 631.0], [97.7, 631.0], [97.8, 631.0], [97.9, 631.0], [98.0, 631.0], [98.1, 631.0], [98.2, 631.0], [98.3, 631.0], [98.4, 631.0], [98.5, 644.0], [98.6, 644.0], [98.7, 644.0], [98.8, 644.0], [98.9, 644.0], [99.0, 647.0], [99.1, 647.0], [99.2, 647.0], [99.3, 647.0], [99.4, 647.0], [99.5, 649.0], [99.6, 649.0], [99.7, 649.0], [99.8, 649.0], [99.9, 649.0]], "isOverall": false, "label": "200 Users Load Test", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 125.0, "series": [{"data": [[300.0, 7.0], [200.0, 13.0]], "isOverall": false, "label": "20 Users Load Test", "isController": false}, {"data": [[500.0, 10.0]], "isOverall": false, "label": "10 Users Load Test", "isController": false}, {"data": [[300.0, 15.0], [200.0, 85.0]], "isOverall": false, "label": "100 Users Load Test", "isController": false}, {"data": [[600.0, 7.0], [700.0, 3.0], [900.0, 5.0], [1000.0, 1.0], [1100.0, 1.0], [1200.0, 1.0], [1400.0, 2.0], [1600.0, 8.0], [1700.0, 4.0], [1800.0, 5.0], [1900.0, 7.0], [2000.0, 8.0], [2100.0, 13.0], [2200.0, 8.0], [2300.0, 34.0], [2400.0, 32.0], [2500.0, 11.0], [2600.0, 13.0], [2700.0, 18.0], [2800.0, 13.0], [2900.0, 9.0], [3000.0, 26.0], [3100.0, 40.0], [3200.0, 17.0], [3300.0, 13.0], [3400.0, 29.0], [3500.0, 39.0], [3600.0, 30.0], [3700.0, 28.0], [3800.0, 43.0], [3900.0, 45.0], [4000.0, 36.0], [4100.0, 24.0], [4200.0, 55.0], [4300.0, 39.0], [4400.0, 31.0], [4500.0, 31.0], [4600.0, 14.0], [4700.0, 6.0], [4800.0, 8.0], [4900.0, 9.0], [5000.0, 7.0], [5100.0, 10.0], [5200.0, 11.0], [5300.0, 14.0], [5400.0, 14.0], [5500.0, 13.0], [5600.0, 8.0], [5700.0, 7.0], [5800.0, 3.0], [5900.0, 3.0], [6000.0, 4.0], [6100.0, 6.0], [6200.0, 5.0], [6300.0, 2.0], [6400.0, 4.0], [6500.0, 5.0], [6600.0, 5.0], [6700.0, 4.0], [6800.0, 2.0], [6900.0, 4.0], [7000.0, 3.0], [7100.0, 1.0], [7200.0, 2.0], [7300.0, 1.0], [7400.0, 1.0], [7600.0, 2.0], [7500.0, 2.0], [7800.0, 2.0], [7700.0, 1.0], [7900.0, 1.0], [8000.0, 2.0], [8100.0, 1.0], [8900.0, 1.0], [9300.0, 1.0], [9700.0, 1.0], [9900.0, 2.0], [10200.0, 1.0], [10300.0, 2.0], [10400.0, 1.0], [10800.0, 2.0], [10900.0, 1.0], [11200.0, 2.0], [11300.0, 2.0], [11800.0, 1.0], [11900.0, 1.0], [12100.0, 1.0], [12300.0, 1.0], [16100.0, 1.0], [21500.0, 2.0], [24400.0, 1.0], [27000.0, 1.0], [200.0, 11.0], [300.0, 9.0], [400.0, 15.0], [500.0, 24.0]], "isOverall": false, "label": "1000 Users Load Test", "isController": false}, {"data": [[300.0, 1.0], [600.0, 30.0], [400.0, 125.0], [500.0, 44.0]], "isOverall": false, "label": "200 Users Load Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 27000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 916.0, "series": [{"data": [[0.0, 283.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 126.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 916.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.299999999999999, "minX": 1.71454224E12, "maxY": 982.0789473684213, "series": [{"data": [[1.71454224E12, 11.149999999999999]], "isOverall": false, "label": "20 Users Load Test-ThreadStarter", "isController": false}, {"data": [[1.71454224E12, 55.019999999999996]], "isOverall": false, "label": "100 Users Load Test-ThreadStarter", "isController": false}, {"data": [[1.71454224E12, 8.299999999999999]], "isOverall": false, "label": "10 Users Load Test-ThreadStarter", "isController": false}, {"data": [[1.71454224E12, 103.115]], "isOverall": false, "label": "200 Users Load Test-ThreadStarter", "isController": false}, {"data": [[1.71454224E12, 982.0789473684213], [1.7145423E12, 482.1954261954267]], "isOverall": false, "label": "1000 Users Load Test-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7145423E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 224.0, "minX": 1.0, "maxY": 27095.0, "series": [{"data": [[4.0, 303.3333333333333], [17.0, 244.0], [18.0, 243.0], [9.0, 266.0], [19.0, 257.0], [20.0, 241.0], [5.0, 310.5], [11.0, 248.0], [13.0, 246.0], [14.0, 260.0], [7.0, 300.5], [15.0, 244.0]], "isOverall": false, "label": "20 Users Load Test", "isController": false}, {"data": [[11.149999999999999, 269.20000000000005]], "isOverall": false, "label": "20 Users Load Test-Aggregated", "isController": false}, {"data": [[2.0, 553.0], [1.0, 555.0], [10.0, 542.0]], "isOverall": false, "label": "10 Users Load Test", "isController": false}, {"data": [[8.299999999999999, 544.4]], "isOverall": false, "label": "10 Users Load Test-Aggregated", "isController": false}, {"data": [[2.0, 322.5], [43.0, 253.0], [45.0, 246.42857142857142], [44.0, 244.83333333333334], [46.0, 252.0], [3.0, 317.0], [61.0, 242.06666666666666], [64.0, 244.33333333333334], [4.0, 316.0], [70.0, 245.0], [73.0, 243.0], [79.0, 240.0], [78.0, 239.33333333333331], [83.0, 226.0], [82.0, 242.0], [86.0, 258.0], [94.0, 226.0], [93.0, 241.0], [92.0, 240.0], [99.0, 252.0], [97.0, 240.8], [100.0, 224.0], [7.0, 321.6666666666667], [8.0, 319.0], [9.0, 305.0], [10.0, 312.0], [11.0, 308.0], [12.0, 321.0], [13.0, 299.0], [17.0, 288.5], [26.0, 292.22222222222223], [27.0, 260.0], [29.0, 252.5]], "isOverall": false, "label": "100 Users Load Test", "isController": false}, {"data": [[54.99999999999997, 258.9699999999999]], "isOverall": false, "label": "100 Users Load Test-Aggregated", "isController": false}, {"data": [[2.0, 24400.0], [3.0, 21530.0], [4.0, 21525.0], [5.0, 16150.0], [6.0, 12358.0], [7.0, 12157.0], [8.0, 11965.0], [9.0, 11831.0], [10.0, 11323.0], [11.0, 11294.0], [12.0, 11209.0], [13.0, 11313.0], [14.0, 10964.0], [15.0, 10808.0], [16.0, 10815.0], [17.0, 10440.0], [18.0, 10318.0], [19.0, 10367.0], [20.0, 10237.0], [21.0, 9986.0], [22.0, 9933.0], [23.0, 9739.0], [24.0, 9325.0], [25.0, 8956.0], [26.0, 8142.0], [27.0, 8097.0], [28.0, 8069.0], [29.0, 7945.0], [30.0, 7797.0], [33.0, 7512.0], [32.0, 7823.5], [35.0, 7609.0], [34.0, 7536.0], [37.0, 7430.0], [36.0, 7604.0], [39.0, 7243.0], [38.0, 7391.0], [41.0, 7188.0], [40.0, 7214.0], [43.0, 7027.0], [42.0, 7083.0], [45.0, 7030.0], [44.0, 6978.0], [47.0, 6904.0], [46.0, 6916.0], [49.0, 6802.0], [48.0, 6924.0], [51.0, 6760.0], [50.0, 6775.0], [53.0, 6822.0], [52.0, 6686.0], [55.0, 6674.0], [54.0, 6692.0], [57.0, 6749.0], [56.0, 6732.0], [59.0, 6598.0], [58.0, 6601.0], [61.0, 6602.0], [60.0, 6579.0], [63.0, 6530.0], [62.0, 6520.0], [67.0, 6495.0], [66.0, 6485.0], [65.0, 6428.0], [64.0, 6514.0], [71.0, 6255.0], [70.0, 6293.0], [69.0, 6326.0], [68.0, 6480.0], [75.0, 6204.0], [74.0, 6225.0], [73.0, 6338.0], [72.0, 6198.0], [79.0, 6124.0], [78.0, 6189.0], [76.0, 6155.0], [83.0, 6031.0], [82.0, 6087.0], [81.0, 6159.0], [80.0, 6121.0], [87.0, 6029.0], [86.0, 5947.0], [85.0, 5923.0], [84.0, 6081.0], [91.0, 5894.0], [90.0, 5843.0], [89.0, 5831.0], [88.0, 5900.0], [95.0, 5763.0], [94.0, 5765.0], [93.0, 5765.0], [92.0, 5783.0], [99.0, 5682.0], [98.0, 5744.0], [97.0, 5671.0], [96.0, 5785.0], [103.0, 5642.0], [102.0, 5669.0], [101.0, 5696.0], [100.0, 5715.0], [107.0, 5620.0], [106.0, 5555.0], [105.0, 5644.0], [104.0, 5655.0], [111.0, 5589.0], [110.0, 5559.0], [109.0, 5574.0], [108.0, 5528.0], [115.0, 5547.0], [114.0, 5506.0], [113.0, 5521.0], [112.0, 5543.0], [119.0, 5506.0], [118.0, 5502.0], [117.0, 5532.0], [116.0, 5493.0], [123.0, 5460.0], [122.0, 5454.0], [121.0, 5487.5], [127.0, 5452.0], [126.0, 5378.0], [125.0, 5386.0], [124.0, 5422.0], [135.0, 5388.0], [134.0, 5361.0], [133.0, 5408.0], [132.0, 5432.0], [130.0, 5418.0], [129.0, 5441.0], [128.0, 5419.0], [143.0, 5290.5], [141.0, 5340.0], [140.0, 5329.0], [139.0, 5304.0], [138.0, 5343.0], [137.0, 5358.0], [136.0, 5434.0], [151.0, 5288.0], [150.0, 5276.0], [149.0, 5284.0], [148.0, 5336.0], [147.0, 5280.0], [145.0, 5365.0], [159.0, 5277.0], [158.0, 5177.0], [157.0, 5186.0], [156.0, 5181.0], [155.0, 5224.0], [154.0, 5268.0], [153.0, 5348.0], [152.0, 5302.0], [167.0, 5222.0], [166.0, 5069.0], [165.0, 5228.0], [164.0, 5167.5], [162.0, 5124.0], [161.0, 5160.0], [160.0, 5168.0], [175.0, 4943.0], [174.0, 4977.0], [173.0, 4961.0], [172.0, 5001.0], [171.0, 5000.0], [170.0, 5111.0], [169.0, 5071.0], [168.0, 5183.0], [183.0, 4995.5], [181.0, 4917.0], [180.0, 4967.666666666667], [177.0, 5007.0], [191.0, 4802.0], [190.0, 4840.0], [189.0, 4848.0], [188.0, 4829.0], [187.0, 4889.0], [186.0, 4823.0], [185.0, 4975.0], [184.0, 4896.0], [199.0, 4696.0], [198.0, 4694.0], [197.0, 4768.0], [196.0, 4700.0], [195.0, 4744.0], [194.0, 4764.0], [193.0, 4827.0], [192.0, 4785.0], [207.0, 4661.0], [206.0, 4656.0], [205.0, 4664.0], [204.0, 4693.5], [202.0, 4688.0], [201.0, 4639.0], [200.0, 4656.0], [215.0, 4544.0], [214.0, 4558.0], [213.0, 4580.0], [212.0, 4618.0], [211.0, 4592.0], [210.0, 4608.0], [209.0, 4607.0], [208.0, 4676.0], [223.0, 4525.0], [222.0, 4542.0], [221.0, 4539.0], [220.0, 4554.0], [219.0, 4545.0], [217.0, 4529.0], [216.0, 4550.0], [231.0, 4455.0], [230.0, 4490.0], [229.0, 4621.0], [228.0, 4541.0], [227.0, 4540.0], [226.0, 4595.0], [225.0, 4599.0], [224.0, 4526.0], [237.0, 4483.0], [236.0, 4511.0], [234.0, 4503.0], [233.0, 4531.0], [232.0, 4465.0], [247.0, 4436.0], [246.0, 4487.0], [245.0, 4500.0], [244.0, 4567.0], [243.0, 4504.0], [242.0, 4515.75], [240.0, 4510.0], [255.0, 4413.0], [253.0, 4427.5], [251.0, 4440.0], [250.0, 4519.0], [249.0, 4423.0], [248.0, 4450.0], [270.0, 4430.0], [271.0, 4445.0], [268.0, 4365.5], [259.0, 4508.0], [258.0, 4427.0], [257.0, 4487.5], [266.0, 4394.0], [265.0, 4353.0], [264.0, 4349.0], [263.0, 4350.0], [262.0, 4393.0], [261.0, 4401.0], [260.0, 4401.0], [287.0, 4419.666666666667], [284.0, 4361.666666666667], [281.0, 4431.0], [280.0, 4306.0], [279.0, 4444.0], [278.0, 4413.5], [275.0, 4380.0], [273.0, 4368.5], [302.0, 4294.333333333333], [299.0, 4341.0], [297.0, 4331.0], [296.0, 4333.5], [294.0, 4302.0], [288.0, 4326.0], [293.0, 4301.0], [292.0, 4420.0], [291.0, 4275.5], [290.0, 4267.0], [318.0, 4368.0], [319.0, 4299.0], [317.0, 4284.0], [316.0, 4314.0], [315.0, 4234.0], [314.0, 4254.0], [313.0, 4390.0], [311.0, 4300.0], [306.0, 4346.0], [305.0, 4328.0], [304.0, 4269.0], [309.0, 4283.0], [334.0, 4217.0], [333.0, 4256.0], [328.0, 4245.0], [327.0, 4186.0], [326.0, 4333.0], [325.0, 4355.0], [324.0, 4297.4], [351.0, 4220.75], [347.0, 4218.75], [343.0, 4208.0], [341.0, 4257.6], [336.0, 4266.166666666666], [363.0, 4218.5], [361.0, 4242.25], [358.0, 4307.0], [354.0, 4231.666666666667], [382.0, 4203.0], [380.0, 4141.333333333333], [377.0, 4191.0], [374.0, 4090.0], [373.0, 4100.333333333333], [370.0, 4168.0], [369.0, 4223.0], [368.0, 4238.142857142858], [392.0, 4072.0], [395.0, 4032.0], [394.0, 4126.0], [393.0, 4107.0], [390.0, 4111.5], [388.0, 4160.5], [386.0, 4141.0], [385.0, 4090.0], [384.0, 4214.0], [413.0, 3961.0], [414.0, 4033.0], [412.0, 4043.0], [411.0, 4006.0], [409.0, 4055.0], [408.0, 4089.0], [407.0, 4032.75], [403.0, 4143.0], [401.0, 4092.833333333333], [419.0, 4128.0], [429.0, 3931.0], [428.0, 3995.5], [426.0, 4011.0], [425.0, 4002.0], [424.0, 4026.0], [421.0, 3990.0], [420.0, 3961.0], [418.0, 4127.0], [417.0, 4002.3333333333335], [445.0, 3922.5], [443.0, 3961.0], [442.0, 3951.0], [439.0, 3944.3333333333335], [436.0, 3971.0], [435.0, 3956.0], [433.0, 4003.0], [432.0, 4042.3333333333335], [463.0, 3915.5], [461.0, 3915.0], [460.0, 3959.25], [456.0, 4000.0], [454.0, 3924.5], [452.0, 3906.0], [448.0, 3922.3333333333335], [478.0, 3878.0], [479.0, 3883.0], [477.0, 3920.3333333333335], [474.0, 3869.0], [473.0, 3883.0], [472.0, 3996.6666666666665], [469.0, 3935.0], [468.0, 3858.0], [467.0, 3880.0], [465.0, 3942.0], [495.0, 3819.0], [494.0, 3887.1428571428573], [487.0, 3878.5], [485.0, 3832.0], [484.0, 3913.0], [483.0, 3868.5], [481.0, 3876.0], [511.0, 3819.0], [509.0, 3848.333333333333], [503.0, 3862.0], [501.0, 3864.0], [498.0, 3844.5], [540.0, 3731.0], [543.0, 3677.0], [542.0, 3682.0], [541.0, 3743.0], [539.0, 3749.0], [538.0, 3786.0], [537.0, 3721.0], [536.0, 3717.833333333333], [527.0, 3759.0], [513.0, 3831.0], [512.0, 3855.0], [518.0, 3773.25], [514.0, 3773.0], [526.0, 3770.0], [523.0, 3744.0], [521.0, 3808.6666666666665], [530.0, 3770.3333333333335], [571.0, 3585.0], [574.0, 3607.0], [573.0, 3646.0], [572.0, 3576.0], [569.0, 3614.285714285714], [551.0, 3628.0], [550.0, 3639.0], [549.0, 3692.0], [547.0, 3672.0], [545.0, 3674.0], [544.0, 3688.0], [562.0, 3681.25], [558.0, 3619.5], [556.0, 3633.0], [554.0, 3666.0], [553.0, 3673.0], [552.0, 3657.0], [605.0, 3590.0], [603.0, 3539.166666666667], [583.0, 3578.0], [581.0, 3600.5], [579.0, 3622.0], [578.0, 3578.5], [576.0, 3589.0], [597.0, 3566.0], [596.0, 3572.0], [595.0, 3535.0], [593.0, 3539.5], [591.0, 3514.0], [590.0, 3519.0], [589.0, 3560.0], [588.0, 3574.0], [586.0, 3575.0], [585.0, 3585.0], [584.0, 3623.0], [633.0, 3436.5], [627.0, 3506.6666666666665], [639.0, 3485.0], [638.0, 3410.0], [634.0, 3443.0], [623.0, 3453.3333333333335], [608.0, 3563.3333333333335], [611.0, 3541.5], [609.0, 3544.0], [613.0, 3473.0], [612.0, 3479.0], [615.0, 3499.0], [614.0, 3500.0], [620.0, 3444.6666666666665], [617.0, 3439.0], [616.0, 3484.0], [631.0, 3428.5], [629.0, 3443.0], [628.0, 3413.0], [624.0, 3483.0], [665.0, 3150.0], [670.0, 3114.0], [671.0, 3169.0], [657.0, 3287.0], [660.0, 3272.0], [659.0, 3258.5], [669.0, 3283.0], [668.0, 3157.0], [666.0, 3178.0], [664.0, 3299.0], [647.0, 3441.0], [646.0, 3370.0], [645.0, 3394.0], [644.0, 3432.0], [643.0, 3393.6666666666665], [640.0, 3446.0], [655.0, 3371.0], [654.0, 3253.0], [653.0, 3283.0], [652.0, 3303.0], [651.0, 3316.0], [650.0, 3336.0], [649.0, 3310.0], [648.0, 3321.0], [663.0, 3216.0], [661.0, 3303.0], [687.0, 3207.0], [701.0, 3132.3333333333335], [698.0, 3185.3333333333335], [679.0, 3198.5], [677.0, 3138.3333333333335], [674.0, 3187.0], [673.0, 3164.5], [695.0, 3145.75], [691.0, 3126.5], [689.0, 3116.0], [686.0, 3191.0], [685.0, 3157.0], [684.0, 3102.0], [683.0, 3211.0], [682.0, 3243.0], [681.0, 3176.0], [680.0, 3228.0], [729.0, 3131.0], [721.0, 3133.0], [735.0, 3085.75], [733.0, 3046.0], [731.0, 3051.5], [719.0, 3024.0], [704.0, 3092.3333333333335], [706.0, 3065.0], [705.0, 3165.0], [708.0, 3150.0], [707.0, 3155.0], [711.0, 3140.0], [710.0, 3089.0], [716.0, 3136.0], [714.0, 3062.0], [713.0, 3053.0], [712.0, 3047.0], [727.0, 3086.0], [726.0, 3054.0], [725.0, 3039.0], [720.0, 3070.0], [766.0, 2815.0], [767.0, 2730.0], [752.0, 2838.0], [756.0, 2817.0], [755.0, 2865.6666666666665], [765.0, 2798.0], [764.0, 2752.0], [762.0, 2820.0], [761.0, 2747.0], [760.0, 2761.0], [743.0, 3009.0], [742.0, 2945.0], [740.0, 2911.0], [737.0, 3018.0], [736.0, 3094.0], [751.0, 2828.0], [750.0, 2847.3333333333335], [747.0, 2915.0], [746.0, 3008.3333333333335], [759.0, 2801.0], [757.0, 2830.0], [796.0, 2518.0], [799.0, 2538.0], [784.0, 2698.5], [787.0, 2648.0], [785.0, 2654.0], [789.0, 2686.0], [788.0, 2644.0], [798.0, 2470.0], [797.0, 2521.0], [795.0, 2569.0], [794.0, 2555.0], [793.0, 2579.0], [792.0, 2610.0], [782.0, 2684.0], [771.0, 2785.3333333333335], [770.0, 2772.0], [775.0, 2705.0], [774.0, 2763.3333333333335], [781.0, 2715.0], [779.0, 2606.0], [777.0, 2638.0], [776.0, 2662.0], [791.0, 2582.0], [790.0, 2641.0], [829.0, 2461.0], [830.0, 2434.0], [816.0, 2439.3333333333335], [828.0, 2437.0], [827.0, 2439.0], [826.0, 2444.0], [824.0, 2438.75], [813.0, 2415.5], [802.0, 2493.0], [800.0, 2439.0], [804.0, 2545.0], [803.0, 2520.0], [806.0, 2433.0], [805.0, 2479.0], [811.0, 2402.0], [810.0, 2511.0], [809.0, 2419.0], [808.0, 2378.0], [820.0, 2469.0], [819.0, 2443.0], [818.0, 2402.0], [817.0, 2453.0], [852.0, 2328.0], [861.0, 2349.0], [863.0, 2322.0], [850.0, 2319.0], [849.0, 2383.4999999999995], [860.0, 2388.0], [859.0, 2385.5], [857.0, 2382.0], [835.0, 2372.0], [833.0, 2438.0], [832.0, 2402.0], [855.0, 2345.0], [854.0, 2344.0], [853.0, 2369.0], [890.0, 2113.0], [894.0, 2049.0], [895.0, 2044.0], [882.0, 2123.5], [880.0, 2158.0], [893.0, 2070.0], [892.0, 2059.0], [891.0, 2043.0], [889.0, 2111.0], [871.0, 2234.5], [869.0, 2308.0], [868.0, 2305.0], [867.0, 2339.3333333333335], [864.0, 2363.0], [879.0, 2193.0], [876.0, 2122.0], [875.0, 2249.0], [874.0, 2193.0], [873.0, 2211.0], [872.0, 2268.0], [887.0, 2114.5], [883.0, 2120.0], [924.0, 1297.0], [927.0, 958.0], [912.0, 1735.0], [915.0, 1689.0], [913.0, 1722.0], [917.0, 1646.0], [916.0, 1685.0], [926.0, 1079.0], [925.0, 1162.0], [923.0, 1426.0], [922.0, 1476.0], [921.0, 1661.0], [920.0, 1647.0], [911.0, 1719.0], [896.0, 2028.0], [899.0, 1972.5], [897.0, 2008.0], [901.0, 1916.0], [900.0, 1986.0], [903.0, 1926.0], [902.0, 1919.0], [910.0, 1779.0], [909.0, 1814.5], [907.0, 1844.0], [906.0, 1905.0], [905.0, 1885.0], [919.0, 1632.0], [918.0, 1640.0], [935.0, 669.0], [959.0, 564.0], [952.0, 566.5], [950.0, 569.5], [948.0, 588.5], [944.0, 590.0], [940.0, 609.0], [939.0, 626.5], [937.0, 633.5], [934.0, 733.0], [933.0, 730.0], [932.0, 783.0], [931.0, 912.0], [930.0, 937.0], [929.0, 964.0], [928.0, 947.0], [985.0, 345.0], [989.0, 301.0], [991.0, 295.5], [978.0, 429.0], [988.0, 304.0], [987.0, 329.0], [986.0, 337.0], [984.0, 346.0], [967.0, 499.5], [963.0, 510.0], [962.0, 546.0], [961.0, 542.0], [960.0, 562.8333333333333], [975.0, 431.0], [974.0, 442.0], [973.0, 462.0], [970.0, 463.0], [969.0, 476.0], [968.0, 465.0], [983.0, 360.0], [982.0, 386.5], [980.0, 413.0], [979.0, 426.0], [1000.0, 277.5], [996.0, 283.5], [994.0, 291.5], [992.0, 294.0], [1.0, 27095.0]], "isOverall": false, "label": "1000 Users Load Test", "isController": false}, {"data": [[501.18499999999995, 3910.052999999997]], "isOverall": false, "label": "1000 Users Load Test-Aggregated", "isController": false}, {"data": [[6.0, 634.8], [8.0, 608.0], [9.0, 600.0], [11.0, 613.5], [13.0, 617.5], [14.0, 593.0], [22.0, 593.25], [28.0, 584.0], [29.0, 602.6666666666666], [32.0, 596.0], [38.0, 595.0], [41.0, 631.0], [40.0, 603.3333333333334], [42.0, 596.0], [45.0, 591.3333333333334], [47.0, 616.5], [49.0, 599.5], [51.0, 576.0], [53.0, 614.0], [55.0, 591.0], [54.0, 599.0], [59.0, 591.25], [61.0, 544.5], [62.0, 535.0], [65.0, 528.3333333333334], [71.0, 520.0], [70.0, 522.6666666666666], [69.0, 529.5], [73.0, 519.5], [78.0, 499.0], [77.0, 500.5], [83.0, 485.0], [82.0, 487.0], [81.0, 492.3333333333333], [87.0, 480.0], [86.0, 486.0], [85.0, 492.0], [90.0, 485.0], [89.0, 475.0], [95.0, 460.2], [98.0, 473.0], [97.0, 464.0], [107.0, 462.6666666666667], [105.0, 469.0], [104.0, 461.5], [108.0, 462.0], [119.0, 456.4545454545455], [120.0, 447.0], [134.0, 454.2142857142858], [142.0, 450.0], [145.0, 439.0], [144.0, 454.1111111111111], [157.0, 441.0], [154.0, 447.0], [174.0, 459.3333333333333], [168.0, 452.6923076923077], [181.0, 448.0], [177.0, 454.3333333333333], [191.0, 434.0], [190.0, 451.0], [189.0, 441.0], [188.0, 442.25], [187.0, 444.0], [186.0, 436.5], [199.0, 418.6666666666667], [196.0, 430.0], [195.0, 424.3333333333333], [192.0, 410.0], [200.0, 358.0], [1.0, 629.0]], "isOverall": false, "label": "200 Users Load Test", "isController": false}, {"data": [[103.08500000000002, 504.15000000000015]], "isOverall": false, "label": "200 Users Load Test-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1416.8, "minX": 1.71454224E12, "maxY": 30467.95, "series": [{"data": [[1.71454224E12, 11647.333333333334], [1.7145423E12, 30467.95]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71454224E12, 1416.8], [1.7145423E12, 3684.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7145423E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 258.9699999999999, "minX": 1.71454224E12, "maxY": 4049.3929313929307, "series": [{"data": [[1.71454224E12, 269.20000000000005]], "isOverall": false, "label": "20 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 544.4]], "isOverall": false, "label": "10 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 258.9699999999999]], "isOverall": false, "label": "100 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 382.5526315789474], [1.7145423E12, 4049.3929313929307]], "isOverall": false, "label": "1000 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 504.15000000000015]], "isOverall": false, "label": "200 Users Load Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7145423E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 258.79, "minX": 1.71454224E12, "maxY": 3705.9636174636175, "series": [{"data": [[1.71454224E12, 268.9]], "isOverall": false, "label": "20 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 540.4000000000001]], "isOverall": false, "label": "10 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 258.79]], "isOverall": false, "label": "100 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 382.4736842105264], [1.7145423E12, 3705.9636174636175]], "isOverall": false, "label": "1000 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 503.62000000000006]], "isOverall": false, "label": "200 Users Load Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7145423E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 181.1842105263158, "minX": 1.71454224E12, "maxY": 2249.4802494802493, "series": [{"data": [[1.71454224E12, 192.85]], "isOverall": false, "label": "20 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 469.0]], "isOverall": false, "label": "10 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 193.7]], "isOverall": false, "label": "100 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 181.1842105263158], [1.7145423E12, 2249.4802494802493]], "isOverall": false, "label": "1000 Users Load Test", "isController": false}, {"data": [[1.71454224E12, 272.125]], "isOverall": false, "label": "200 Users Load Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7145423E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 224.0, "minX": 1.71454224E12, "maxY": 12358.0, "series": [{"data": [[1.71454224E12, 649.0], [1.7145423E12, 12358.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71454224E12, 224.0], [1.7145423E12, 542.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71454224E12, 595.0], [1.7145423E12, 5673.200000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71454224E12, 635.03], [1.7145423E12, 10877.579999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71454224E12, 446.0], [1.7145423E12, 3878.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.71454224E12, 608.55], [1.7145423E12, 6750.0999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7145423E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 247.5, "minX": 1.0, "maxY": 24400.0, "series": [{"data": [[133.0, 4694.0], [2.0, 9140.5], [8.0, 11086.5], [38.0, 386.5], [10.0, 542.0], [41.0, 591.0], [173.0, 3039.0], [12.0, 7803.5], [200.0, 471.0], [4.0, 12061.0], [68.0, 5689.0], [20.0, 257.5], [377.0, 3934.0], [6.0, 10111.5], [100.0, 247.5], [105.0, 2278.0], [28.0, 6767.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 24400.0], [2.0, 21527.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 377.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11898.0, "series": [{"data": [[133.0, 4606.0], [2.0, 9123.0], [8.0, 11086.5], [38.0, 386.5], [10.0, 537.0], [41.0, 591.0], [173.0, 2950.0], [12.0, 4841.0], [200.0, 470.5], [4.0, 11898.0], [68.0, 5566.5], [20.0, 257.0], [377.0, 3860.0], [6.0, 9959.0], [100.0, 247.5], [105.0, 2252.0], [28.0, 6680.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [2.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 377.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 22.166666666666668, "minX": 1.71454224E12, "maxY": 22.166666666666668, "series": [{"data": [[1.71454224E12, 22.166666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71454224E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.71454224E12, "maxY": 15.95, "series": [{"data": [[1.71454224E12, 6.133333333333334], [1.7145423E12, 15.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7145423E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7145423E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.71454224E12, "maxY": 15.95, "series": [{"data": [[1.71454224E12, 0.3333333333333333]], "isOverall": false, "label": "20 Users Load Test-success", "isController": false}, {"data": [[1.71454224E12, 1.6666666666666667]], "isOverall": false, "label": "100 Users Load Test-success", "isController": false}, {"data": [[1.71454224E12, 0.6333333333333333], [1.7145423E12, 15.95]], "isOverall": false, "label": "1000 Users Load Test-success", "isController": false}, {"data": [[1.7145423E12, 0.08333333333333333]], "isOverall": false, "label": "1000 Users Load Test-failure", "isController": false}, {"data": [[1.71454224E12, 0.16666666666666666]], "isOverall": false, "label": "10 Users Load Test-success", "isController": false}, {"data": [[1.71454224E12, 3.3333333333333335]], "isOverall": false, "label": "200 Users Load Test-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7145423E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.71454224E12, "maxY": 15.95, "series": [{"data": [[1.71454224E12, 6.133333333333334], [1.7145423E12, 15.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7145423E12, 0.08333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7145423E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

